apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/Mohitv/bevel.git
    ref: main
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.49.1:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIMs7qRRqazVZSWr+GrgTWB22MWBr3TyPwLhimGyQrLJdEp5eCpteCpheCngKWggBEAEaBgjx
      tNCZBiIKc3lzY2hhbm5lbCpANTMyN2M5M2I0MzJiY2NiMWY1YTdiNGRjMDMwYTNkZWU1ZDgzZTZk
      YWM2ODg4NzE3MGJhYzdmMjMzOWQ2NjcxYhIaEhj4XGJIrJwMg2mINOk31ymXD7A/pebpFgcSm10K
      mF0SlV0SkysKB09yZGVyZXIShysS0hYKDnN1cHBseWNoYWluTVNQEr8WGssUCgNNU1ASwxQSuBQS
      tRQKDnN1cHBseWNoYWluTVNQEvUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBVEND
      QWFhZ0F3SUJBZ0lVSm1OLzZNNjBVamFwL0FnNTlNRWU1WjdPenE4d0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3T1RJNE1Ea3pPVFUxV2hjTk1qVXdOekU0TURrek9UVTFX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJNT3hG
      eG9IQThoUDVvTy8zWEhmWWUvczJwVGs0bXc4VzcyR2l3bDhOSjlYT1E1aVFGQlcKSUJLTVZyUlJp
      eGRqMTNZUWF2eWg0LzdvMmVEZWxSVGN2Q0NqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCU1RNZENWMjh5LzN4M1JiUTlOU3B0MjVz
      L2dQakFLCkJnZ3Foa2pPUFFRREFnTkpBREJHQWlFQW80bGRpRXo0bUVpemZyMkxIY1NrSTI2VCsx
      UWlQclQwaGNjZFArNHoKeDkwQ0lRRHJNYS8wOG1xZVJjb0V0QzhUbDZIQlc1TDVDOWZHQmFqa3hG
      bVNxSFRYT2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKiCC0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlDNFRDQ0FvaWdBd0lCQWdJVUc5bklmZWxIcEZkd2ZJcWx0Qkd0UVFGZU9H
      c3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dR
      WURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd09USTRNRGswT0RBd1do
      Y05Nak13T1RJNE1EazFNekF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05U
      RXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZR
      UUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr
      dwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRThGM0YydnlQaDRPNHpyOTgreVU2WUlO
      WnRycStJZ016CldWVjhTVURNSU9JK0hFSjV6MTJaTk1qNnpJdEZjMkM2YURXaFpDZE9xNHdFeUZC
      eFpZUUFXNk9DQVJRd2dnRVEKTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCUmovT1FLV1ZtUQowdGJTcmdrZ1kxRzZsTTBWRVRBZkJnTlZIU01FR0RB
      V2dCU1RNZENWMjh5LzN4M1JiUTlOU3B0MjVzL2dQakFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5
      c2N5MDFOalkzWXpZM1ptWTNMV1JrYkdzME1JR0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJ
      NmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVda
      bWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3
      CmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBF
      QXdJRFJ3QXcKUkFJZ1dWZlVQeTl0QzNLSnErOTJ5Ly8rU1ZmSUszN3pDaWhFTytsMndEb081S01D
      SUF4S0J2eGx4dVhTS2x6TQpvczNzQXpsTlkwUkEwMDJRWTdRV2JmeGxZYkRpCi0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1Nkr1BS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt
      LS0tLQpNSUlDQVRDQ0FhYWdBd0lCQWdJVUptTi82TTYwVWphcC9BZzU5TUVlNVo3T3pxOHdDZ1lJ
      S29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ
      TUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFE
      REJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd09USTRNRGt6T1RVMVdoY05NalV3
      TnpFNE1Ea3pPVFUxV2pCZU1Rc3dDUVlEVlFRR0V3SkhRakVQCk1BMEdBMVVFQ0F3R1RHOXVaRzl1
      TVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9NQjA5eVpHVnkKWlhJeEd6QVpCZ05W
      QkFNTUVtTmhMbk4xY0hCc2VXTm9ZV2x1TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5
      QXdFSEEwSUFCTU94RnhvSEE4aFA1b08vM1hIZlllL3MycFRrNG13OFc3Mkdpd2w4Tko5WE9RNWlR
      RkJXCklCS01WclJSaXhkajEzWVFhdnloNC83bzJlRGVsUlRjdkNDalFqQkFNQThHQTFVZEV3RUIv
      d1FGTUFNQkFmOHcKRGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlNUTWRDVjI4eS8z
      eDNSYlE5TlNwdDI1cy9nUGpBSwpCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUFvNGxkaUV6NG1FaXpm
      cjJMSGNTa0kyNlQrMVFpUHJUMGhjY2RQKzR6Cng5MENJUURyTWEvMDhtcWVSY29FdEM4VGw2SEJX
      NUw1QzlmR0Jhamt4Rm1TcUhUWE9nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlu
      cyI4CgZBZG1pbnMSLhIkCAESIBIIEgYIARICCAAaFBISCg5zdXBwbHljaGFpbk1TUBABGgZBZG1p
      bnMiOwoLRW5kb3JzZW1lbnQSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoG
      QWRtaW5zIjcKB1JlYWRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoG
      QWRtaW5zIjcKB1dyaXRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoG
      QWRtaW5zKgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZBZG1pbnMaJgoMQ2FwYWJp
      bGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGoISCg1Db25zZW5zdXNUeXBlEvAREuURCghl
      dGNkcmFmdBLYEQrBEQoYb3JkZXJlcjEuc3VwcGx5Y2hhaW4tbmV0EIo3Gs8ILS0tLS1CRUdJTiBD
      RVJUSUZJQ0FURS0tLS0tCk1JSURBakNDQXFtZ0F3SUJBZ0lVQzVCUjEwVEJQNllWNDNGKzRGQ3Bk
      NWlsZGJnd0NnWUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01C
      a3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlN
      UnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3T1RJNE1EazBP
      REF3V2hjTk1qTXdPVEk0TURrMU16QXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVC
      eE1TTlRFdU5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBdwpE
      Z1lEVlFRTEV3ZHZjbVJsY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFH
      RnBiaTF1ClpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBU3RvbHhKK01sKzg5
      QTc1L3pWSEVOUGR4cloKOER1K2JjZERlcmhoRkQ0VXNjUm9HL1gzM3Y1TlE0Z25sRTc2Y3VQYzZO
      eGcwVUpaS1g0WEFhZ1k4ZVl2bzRJQgpNRENDQVN3d0RnWURWUjBQQVFIL0JBUURBZ09vTUIwR0Ex
      VWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGCkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1C
      MEdBMVVkRGdRV0JCUWVMZUl5Z2Q0b1hFSkxCNHdjbmNnZXlnUVUKc2pBZkJnTlZIU01FR0RBV2dC
      U1RNZENWMjh5LzN4M1JiUTlOU3B0MjVzL2dQakEvQmdOVkhSRUVPREEyZ2hodgpjbVJsY21WeU1T
      NXpkWEJ3YkhsamFHRnBiaTF1WlhTQ0dtOXlaR1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1Clky
      OXRNR3dHQ0NvREJBVUdCd2dCQkdCN0ltRjBkSEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpv
      aUlpd2kKYUdZdVJXNXliMnhzYldWdWRFbEVJam9pYjNKa1pYSmxjakV1YzNWd2NHeDVZMmhoYVc0
      dGJtVjBJaXdpYUdZdQpWSGx3WlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndB
      d1JBSWdQQ0hoVENPOVd5bGthNUJrCk9TaU90eXFrdFAxQ1lBR2hUWjlOcUxpcjdwc0NJQ0xWbWpH
      WUEvSVpObUxuUkxFbGV0aU4weXB4YWpqZzczS0kKOE9lRG5qSWYKLS0tLS1FTkQgQ0VSVElGSUNB
      VEUtLS0tLQoizwgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREFqQ0NBcW1nQXdJQkFn
      SVVDNUJSMTBUQlA2WVY0M0YrNEZDcGQ1aWxkYmd3Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0Ex
      VUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1S
      QXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkx
      dVpYUXcKSGhjTk1qSXdPVEk0TURrME9EQXdXaGNOTWpNd09USTRNRGsxTXpBd1dqQnhNUXN3Q1FZ
      RFZRUUdFd0pIUWpFYgpNQmtHQTFVRUJ4TVNOVEV1TlRBdkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZ
      RFZRUUtFd2RQY21SbGNtVnlNUkF3CkRnWURWUVFMRXdkdmNtUmxjbVZ5TVNFd0h3WURWUVFERXho
      dmNtUmxjbVZ5TVM1emRYQndiSGxqYUdGcGJpMXUKWlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtq
      T1BRTUJCd05DQUFTdG9seEorTWwrODlBNzUvelZIRU5QZHhyWgo4RHUrYmNkRGVyaGhGRDRVc2NS
      b0cvWDMzdjVOUTRnbmxFNzZjdVBjNk54ZzBVSlpLWDRYQWFnWThlWXZvNElCCk1EQ0NBU3d3RGdZ
      RFZSMFBBUUgvQkFRREFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFj
      REFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZUxlSXlnZDRvWEVKTEI0d2NuY2dl
      eWdRVQpzakFmQmdOVkhTTUVHREFXZ0JTVE1kQ1YyOHkvM3gzUmJROU5TcHQyNXMvZ1BqQS9CZ05W
      SFJFRU9EQTJnaGh2CmNtUmxjbVZ5TVM1emRYQndiSGxqYUdGcGJpMXVaWFNDR205eVpHVnlaWEl4
      TG1SbGRtVnNiM0F1Ykc5allXd3UKWTI5dE1Hd0dDQ29EQkFVR0J3Z0JCR0I3SW1GMGRISnpJanA3
      SW1obUxrRm1abWxzYVdGMGFXOXVJam9pSWl3aQphR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2liM0pr
      WlhKbGNqRXVjM1Z3Y0d4NVkyaGhhVzR0Ym1WMElpd2lhR1l1ClZIbHdaU0k2SW05eVpHVnlaWElp
      Zlgwd0NnWUlLb1pJemowRUF3SURSd0F3UkFJZ1BDSGhUQ085V3lsa2E1QmsKT1NpT3R5cWt0UDFD
      WUFHaFRaOU5xTGlyN3BzQ0lDTFZtakdZQS9JWk5tTG5STEVsZXRpTjB5cHhhampnNzNLSQo4T2VE
      bmpJZgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChISCgU1MDBtcxAKGAEgBSiAgIAKGgZBZG1p
      bnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0Y2hUaW1lb3V0Eg4S
      BAoCMnMaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0
      ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIa
      BkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1p
      bnMSuS8KC0NvbnNvcnRpdW1zEqkvEt4uChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SxC4SsRcKD21h
      bnVmYWN0dXJlck1TUBKdFxqlFQoDTVNQEp0VEpIVEo8VCg9tYW51ZmFjdHVyZXJNU1ASgQYtLS0t
      LUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ0REQ0NBYktnQXdJQkFnSVVSZjR6elBSVUNuMTNN
      eFdDS24zTGhqdU0yQ0l3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5C
      Z05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5Z
      VzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdI
      aGNOTWpJd09USTRNRGswTVRVM1doY05NalV3TnpFNE1EazBNVFUzV2pCa01Rc3dDUVlEVlFRRwpF
      d0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJn
      TlZCQW9NCkRFMWhiblZtWVdOMGRYSmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNt
      VnlMVzVsZERCWk1CTUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJORXprMDhLR1hHbFRE
      QjV1N2paam5YVUtJcjdQRGU5aXdpagp5TlZjanRSNFkxYUdFTENnalhGOE40c0hrbkFzTlBMVzQ0
      QkhlVG15dHJNQTRLQjMwYStqUWpCQU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFR
      SC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUTF3TEo0aVRRUDlHbmQKTmF6dTBqOFRzTkI2S3pBS0Jn
      Z3Foa2pPUFFRREFnTklBREJGQWlFQTRJeW43Mk0vUHNJbDNXSUN2em8remp0TgoxVU42K1VuQ0p5
      MWd3eDF6U1NVQ0lFNVpLbHNyMlJCLzR5RXpyVk95L3IxdnoxTGwvQ0VEZlJzYXIwZ1lybFFrCi0t
      LS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIuMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1J
      SURFRENDQXJlZ0F3SUJBZ0lVTnJMNDlkWHJUYS84b2w2V2IyR095b1oyaUtvd0NnWUlLb1pJemow
      RUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFV
      RUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFN
      TUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdPVEk0TURrME9UQXdXaGNOTWpN
      d09USTRNRGsxTkRBd1dqQ0JoakVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdOVkJBY1RFVFEzTGpN
      NEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhWeVpYSXhJekFNQmdO
      VkJBc1RCV0ZrYldsdU1CTUdBMVVFQ3hNTWJXRnVkV1poWTNSMWNtVnlNUjh3CkhRWURWUVFEREJa
      QlpHMXBia0J0WVc1MVptRmpkSFZ5WlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkkKemow
      REFRY0RRZ0FFdzU0UjBGSjdWVXBFNUtsQ3NqYmYwRjkvTWRvTU5QT29DMFhFQk9YdkZCckZaR2xy
      bWFoUwpVbCtlWFpuNXhVb2FGVVVoYjhsdlBEVitNWE1KQjg4YzJhT0NBU0l3Z2dFZU1BNEdBMVVk
      RHdFQi93UUVBd0lICmdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRdzRTRFRRZU92
      dlpLQTdxZUFmK3F6akZtTHR6QWYKQmdOVkhTTUVHREFXZ0JRMXdMSjRpVFFQOUduZE5henUwajhU
      c05CNkt6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMApiMjlzY3kwM1kyUTNabVJtT1RjMkxUVjJZM1kx
      TUlHWEJnZ3FBd1FGQmdjSUFRU0JpbnNpWVhSMGNuTWlPbnNpCllXSmhZeTVwYm1sMElqb2lkSEox
      WlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXUKSWpvaWJXRnVkV1po
      WTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pUVdSdGFXNUFiV0Z1ZFdaaApZM1Ix
      Y21WeUxXNWxkQ0lzSW1obUxsUjVjR1VpT2lKaFpHMXBiaUo5ZlRBS0JnZ3Foa2pPUFFRREFnTkhB
      REJFCkFpQWM4bGZwWWZlSFFLaGFoeEpTam1GY3N6SGJEYklwMG05NllFdHF1dURBT0FJZ1M1K1Vv
      c1haZ2FBeloyUUkKRDBmK0FBTTJENVlNRWowbmpNT0JGU05zODJRPQotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZKgQYtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQ0REQ0NBYktnQXdJQkFnSVVSZjR6elBSVUNuMTNNeFdDS24zTGhqdU0yQ0l3Q2dZSUtvWkl6
      ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdB
      MVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZC
      QU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJd09USTRNRGswTVRVM1doY05N
      alV3TnpFNE1EazBNVFUzV2pCa01Rc3dDUVlEVlFRRwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlh
      V05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJnTlZCQW9NCkRFMWhiblZtWVdOMGRYSmxj
      akVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUcKQnlxR1NNNDlB
      Z0VHQ0NxR1NNNDlBd0VIQTBJQUJORXprMDhLR1hHbFREQjV1N2paam5YVUtJcjdQRGU5aXdpagp5
      TlZjanRSNFkxYUdFTENnalhGOE40c0hrbkFzTlBMVzQ0QkhlVG15dHJNQTRLQjMwYStqUWpCQU1B
      OEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JC
      UTF3TEo0aVRRUDlHbmQKTmF6dTBqOFRzTkI2S3pBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQTRJ
      eW43Mk0vUHNJbDNXSUN2em8remp0TgoxVU42K1VuQ0p5MWd3eDF6U1NVQ0lFNVpLbHNyMlJCLzR5
      RXpyVk95L3IxdnoxTGwvQ0VEZlJzYXIwZ1lybFFrCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      GgZBZG1pbnMiOAoHUmVhZGVycxItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0dXJlck1T
      UBoGQWRtaW5zIjgKB1dyaXRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVyZXJN
      U1AaBkFkbWlucyI5CgZBZG1pbnMSLxIlCAESIRIIEgYIARICCAAaFRITCg9tYW51ZmFjdHVyZXJN
      U1AQARoGQWRtaW5zIjwKC0VuZG9yc2VtZW50Ei0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFudWZh
      Y3R1cmVyTVNQGgZBZG1pbnMqBkFkbWlucxKyFgoKY2Fycmllck1TUBKjFhq/FAoDTVNQErcUEqwU
      EqkUCgpjYXJyaWVyTVNQEukFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2
      Z0F3SUJBZ0lVRXp5Q3FOSlJqdnhPZ1ZDUXhFUWwwTENyUEJVd0NnWUlLb1pJemowRUF3SXcKV2pF
      TE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1
      Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5
      TFc1bGREQWVGdzB5Ck1qQTVNamd3T1RRek5UbGFGdzB5TlRBM01UZ3dPVFF6TlRsYU1Gb3hDekFK
      QmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2
      YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1
      WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBVGo1c1llL3pOb0xTbVhMc0pi
      L1JFZUdoTFNtZnlxZ3ZrZlNJUHdLY0RmWjgxcURMYzVHMFZaOUk0cnBEQUEKZEk5SzkySnkveFJi
      ald0SHI2TlF2VVl5bzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FF
      QXdJQnBqQWRCZ05WSFE0RUZnUVVKbWRYeUFubFBSK2x5cThjVWFzQzdLMkVMcG93Q2dZSUtvWkl6
      ajBFCkF3SURTUUF3UmdJaEFOREdiazRoS29pcnhjK2tYSlFGdWgzeWs5NGdzZHNETjBRNmF2dm1W
      NlhSQWlFQTZSUUsKRDN2QlIvVmRYUW9BSWE4U1BoQVFpcDF1VUI5N0FmUExZaGVYb0hrPQotLS0t
      LUVORCBDRVJUSUZJQ0FURS0tLS0tCiKyCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlD
      N1RDQ0FwU2dBd0lCQWdJVVZ6QnRlcmtqcEZKSXhTeXM5d212WUFOdEdIc3dDZ1lJS29aSXpqMEVB
      d0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVC
      d3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZ
      WEp5YVdWeUxXNWxkREFlRncweQpNakE1TWpnd09UVXhNREJhRncweU16QTVNamd3T1RVMk1EQmFN
      SGd4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWti
      MjR4RURBT0JnTlZCQW9UQjBOaGNuSnBaWEl4SGpBTUJnTlYKQkFzVEJXRmtiV2x1TUE0R0ExVUVD
      eE1IWTJGeWNtbGxjakVhTUJnR0ExVUVBd3dSUVdSdGFXNUFZMkZ5Y21sbApjaTF1WlhRd1dUQVRC
      Z2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSb0MzSlVlN0puZVN0YmhuMG82NDZVClFTdUJo
      MEpBa292azAwN0tNMUowdndYM0JqRlRxK25Wcmd4SGZJRlpqdjJvemJvMFBiWDhYOVgwMHBUOWJk
      MloKbzRJQkdEQ0NBUlF3RGdZRFZSMFBBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hR
      WURWUjBPQkJZRQpGTWlKTkxXRW5aaUgzdVY5aGkzMktlTUl1VERxTUI4R0ExVWRJd1FZTUJhQUZD
      Wm5WOGdKNVQwZnBjcXZIRkdyCkF1eXRoQzZhTUNRR0ExVWRFUVFkTUJ1Q0dXTmhMWFJ2YjJ4ekxU
      WmtOR00yWmpjMlpHWXRibmh6Y1hFd2dZMEcKQ0NvREJBVUdCd2dCQklHQWV5SmhkSFJ5Y3lJNmV5
      SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aQpPaUowY25WbElpd2lhR1l1UVdabWFX
      eHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1CmRFbEVJam9pUVdSdGFX
      NUFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaVlXUnRhVzRpZlgwd0NnWUkKS29aSXpq
      MEVBd0lEUndBd1JBSWdGbWllNXUxeWxjc2dZVEt1eEZoZ0xjMGwyb1JkeWx2aVcxTlppTUhKQ1BF
      QwpJR3RsaFBqNU1KSFVxaUJUVjFPQ2lEYTE4WXQ5ampObUhaaUV5R3BWRkpYWgotLS0tLUVORCBD
      RVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRF
      LS0tLS0KTUlJQitUQ0NBWjZnQXdJQkFnSVVFenlDcU5KUmp2eE9nVkNReEVRbDBMQ3JQQlV3Q2dZ
      SUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpF
      UE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFR
      RERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTWpBNU1qZ3dPVFF6TlRsYUZ3MHlOVEEzTVRn
      d09UUXpOVGxhTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpB
      TkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3
      T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFU
      ajVzWWUvek5vTFNtWExzSmIvUkVlR2hMU21meXFndmtmU0lQd0tjRGZaODFxRExjNUcwVlo5STRy
      cERBQQpkSTlLOTJKeS94UmJqV3RIcjZOUXZVWXlvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgv
      TUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVUptZFh5QW5sUFIrbHlxOGNVYXND
      N0syRUxwb3dDZ1lJS29aSXpqMEUKQXdJRFNRQXdSZ0loQU5ER2JrNGhLb2lyeGMra1hKUUZ1aDN5
      azk0Z3Nkc0ROMFE2YXZ2bVY2WFJBaUVBNlJRSwpEM3ZCUi9WZFhRb0FJYThTUGhBUWlwMXVVQjk3
      QWZQTFloZVhvSGs9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMwoHUmVhZGVy
      cxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyIzCgdXcml0ZXJzEigS
      HggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zIjQKBkFkbWlucxIqEiAIARIc
      EggSBggBEgIIABoQEg4KCmNhcnJpZXJNU1AQARoGQWRtaW5zIjcKC0VuZG9yc2VtZW50EigSHggB
      EhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5lbENy
      ZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9D
      aGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwvT3Jk
      ZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYKEEhhc2hpbmdBbGdvcml0aG0S
      EhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0dXJlEhASBgj/////
      DxoGQWRtaW5zGk4KEE9yZGVyZXJBZGRyZXNzZXMSOhIfCh1vcmRlcmVyMS5zdXBwbHljaGFpbi1u
      ZXQ6NzA1MBoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZW
      MV80XzMSABoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1Jl
      YWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVy
      cxoGQWRtaW5zKgZBZG1pbnMaCgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5     
