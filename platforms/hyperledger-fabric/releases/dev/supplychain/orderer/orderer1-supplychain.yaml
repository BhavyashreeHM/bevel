apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/Mohitv/bevel.git
    ref: main
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.49.1:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIBkiCzMlvyPjJsp4Zg8znlKnkJGdSN/qVz+qcpuwmw0REqJeCp9eCpxeCngKWggBEAEaBgiy
      tYmaBiIKc3lzY2hhbm5lbCpAMTc1Zjk4OGY1NWMwYjJhZjJmMTVlYTUxOWE5MTk1ZTcwY2VhZjA4
      ZTFjNTQ4ZTc4NTg0M2IxZjE5YTk3MTk1ZhIaEhgreGoVoy6PLe0YVT3VHfuGhCVNxuStqA8Sn10K
      nF0SmV0SkysKB09yZGVyZXIShysS0hYKDnN1cHBseWNoYWluTVNQEr8WGssUCgNNU1ASwxQSuBQS
      tRQKDnN1cHBseWNoYWluTVNQEvUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBVEND
      QWFhZ0F3SUJBZ0lVSEg2aVcvN0YxM29sTU8zL1ZDbEtubDhyMUswd0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05Nakl4TURBNU1EVXdOakUzV2hjTk1qVXdOekk1TURVd05qRTNX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJMbTQ2
      Qm9xSTcvTWhMVlBILzBtS09sNHJWWjEwTzJWeDRhOUl1L0dJY01wQ0Y2V1M1bTkKODNDanZ5RURw
      VWl4cmFSbE05akJETk1GcHhMTkg1ZEN4YktqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCVEhxRGNqS25NRjkwTlFyTThtZTQ0aGE4
      d3FlVEFLCkJnZ3Foa2pPUFFRREFnTkpBREJHQWlFQWxWNGpQYitDcnBkc0h1a0xHSzBVUHF2V1Vq
      eWNpM0hFcU95Mm90ZDEKdE84Q0lRQ2JCV2xiVzJmeUg2N3FrRHVsdHJ0WVFMRFZ2MVE2V3hkRjVG
      a0ZJQitzSGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKiCC0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlDNFRDQ0FvaWdBd0lCQWdJVWUwL0ZzdGZRbVFPTGYzL082bWdPNnZiRCtY
      Z3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dR
      WURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1EQTVNRFV4TXpBd1do
      Y05Nak14TURBNU1EVXhPREF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05U
      RXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZR
      UUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr
      dwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRWJzTGU2ZlZxUkpnR09LRnBhRzcxMnVp
      cHBXdDhmdjBDCk5ESTh0S3l2bkt1c09oc2k5enNJU2N6VTUya0RSTnpYelFFL3cvYkorSGR4VHhk
      OFJBc3ZLcU9DQVJRd2dnRVEKTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCUkwyM2tiNEVxYQpJc3d0VUxROTNGT2Y2aWg1MERBZkJnTlZIU01FR0RB
      V2dCVEhxRGNqS25NRjkwTlFyTThtZTQ0aGE4d3FlVEFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5
      c2N5MDFOalkzWXpZM1ptWTNMWE53ZDNBNE1JR0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJ
      NmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVda
      bWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3
      CmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBF
      QXdJRFJ3QXcKUkFJZ1ZNMEZ3UGNoWHNlb25Zai9kNXBOMFdZRFQwcDVnRzRkWmR1MjFZQndUSUVD
      SUVUUkZWR0dCSkVTLzM1TwpBOWhNMGh1SFVRcjBTeDNnejBQMUJWMWtRb2kyCi0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1Nkr1BS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt
      LS0tLQpNSUlDQVRDQ0FhYWdBd0lCQWdJVUhINmlXLzdGMTNvbE1PMy9WQ2xLbmw4cjFLMHdDZ1lJ
      S29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ
      TUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFE
      REJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1EQTVNRFV3TmpFM1doY05NalV3
      TnpJNU1EVXdOakUzV2pCZU1Rc3dDUVlEVlFRR0V3SkhRakVQCk1BMEdBMVVFQ0F3R1RHOXVaRzl1
      TVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9NQjA5eVpHVnkKWlhJeEd6QVpCZ05W
      QkFNTUVtTmhMbk4xY0hCc2VXTm9ZV2x1TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5
      QXdFSEEwSUFCTG00NkJvcUk3L01oTFZQSC8wbUtPbDRyVloxME8yVng0YTlJdS9HSWNNcENGNldT
      NW05CjgzQ2p2eUVEcFVpeHJhUmxNOWpCRE5NRnB4TE5INWRDeGJLalFqQkFNQThHQTFVZEV3RUIv
      d1FGTUFNQkFmOHcKRGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlRIcURjaktuTUY5
      ME5Rck04bWU0NGhhOHdxZVRBSwpCZ2dxaGtqT1BRUURBZ05KQURCR0FpRUFsVjRqUGIrQ3JwZHNI
      dWtMR0swVVBxdldVanljaTNIRXFPeTJvdGQxCnRPOENJUUNiQldsYlcyZnlINjdxa0R1bHRydFlR
      TERWdjFRNld4ZEY1RmtGSUIrc0hnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFkbWlu
      cyI3CgdSZWFkZXJzEiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlu
      cyI3CgdXcml0ZXJzEiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlu
      cyI4CgZBZG1pbnMSLhIkCAESIBIIEgYIARICCAAaFBISCg5zdXBwbHljaGFpbk1TUBABGgZBZG1p
      bnMiOwoLRW5kb3JzZW1lbnQSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1TUBoG
      QWRtaW5zKgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEYgIBAGgZBZG1pbnMaHgoMQmF0
      Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucxofChNDaGFubmVsUmVzdHJpY3Rpb25zEggaBkFkbWlu
      cxomCgxDYXBhYmlsaXRpZXMSFhIMCgoKBlYxXzRfMhIAGgZBZG1pbnMaghIKDUNvbnNlbnN1c1R5
      cGUS8BES5REKCGV0Y2RyYWZ0EtgRCsERChhvcmRlcmVyMS5zdXBwbHljaGFpbi1uZXQQijcazwgt
      LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREFqQ0NBcW1nQXdJQkFnSVVjNExwVXU3dmRk
      bHRIUExzQUUrRHRNdFh0c3N3Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6
      QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RB
      ZFBjbVJsY21WeU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1q
      SXhNREE1TURVeE16QXdXaGNOTWpNeE1EQTVNRFV4T0RBd1dqQnhNUXN3Q1FZRFZRUUdFd0pIUWpF
      YgpNQmtHQTFVRUJ4TVNOVEV1TlRBdkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZRFZRUUtFd2RQY21S
      bGNtVnlNUkF3CkRnWURWUVFMRXdkdmNtUmxjbVZ5TVNFd0h3WURWUVFERXhodmNtUmxjbVZ5TVM1
      emRYQndiSGxqYUdGcGJpMXUKWlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFS
      NGFJNnFGVmtFMFRCa280K2k2enBhVVpqVwpndElRZUU4akZpaDNEazM3dW45WThLY3BFSFRuV3JG
      RVA3Z1hiZXdEREljQ2NPQUZhVE1GU0czSnRaVWNvNElCCk1EQ0NBU3d3RGdZRFZSMFBBUUgvQkFR
      REFnT29NQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJN
      QkFmOEVBakFBTUIwR0ExVWREZ1FXQkJTRTM1ZlRNN3VSTmVsZ3BYbVJiK1JrYk80VQpJVEFmQmdO
      VkhTTUVHREFXZ0JUSHFEY2pLbk1GOTBOUXJNOG1lNDRoYTh3cWVUQS9CZ05WSFJFRU9EQTJnaGh2
      CmNtUmxjbVZ5TVM1emRYQndiSGxqYUdGcGJpMXVaWFNDR205eVpHVnlaWEl4TG1SbGRtVnNiM0F1
      Ykc5allXd3UKWTI5dE1Hd0dDQ29EQkFVR0J3Z0JCR0I3SW1GMGRISnpJanA3SW1obUxrRm1abWxz
      YVdGMGFXOXVJam9pSWl3aQphR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2liM0prWlhKbGNqRXVjM1Z3
      Y0d4NVkyaGhhVzR0Ym1WMElpd2lhR1l1ClZIbHdaU0k2SW05eVpHVnlaWElpZlgwd0NnWUlLb1pJ
      emowRUF3SURSd0F3UkFJZ2FxOEo0OWtnN3NpT3UrS1EKanFaNXZvcjArVWFiNm02bDdkMGhvME9n
      U3p3Q0lFSEhITHJRN2o0K0NMNi9yQUlVb1NRZFRnekw5VkFGTzd3UwpzZkI5SzRkOQotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tCiLPCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQWpD
      Q0FxbWdBd0lCQWdJVWM0THBVdTd2ZGRsdEhQTHNBRStEdE10WHRzc3dDZ1lJS29aSXpqMEVBd0l3
      ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH
      VEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3
      YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1EQTVNRFV4TXpBd1doY05Nak14TURBNU1EVXhPREF3
      V2pCeE1Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1
      Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3
      SHdZRFZRUURFeGh2Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pP
      UFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVI0YUk2cUZWa0UwVEJrbzQraTZ6cGFVWmpXCmd0SVFlRThq
      RmloM0RrMzd1bjlZOEtjcEVIVG5XckZFUDdnWGJld0RESWNDY09BRmFUTUZTRzNKdFpVY280SUIK
      TURDQ0FTd3dEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJC
      Z2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlNFMzVmVE03dVJO
      ZWxncFhtUmIrUmtiTzRVCklUQWZCZ05WSFNNRUdEQVdnQlRIcURjaktuTUY5ME5Rck04bWU0NGhh
      OHdxZVRBL0JnTlZIUkVFT0RBMmdoaHYKY21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NH
      bTl5WkdWeVpYSXhMbVJsZG1Wc2IzQXViRzlqWVd3dQpZMjl0TUd3R0NDb0RCQVVHQndnQkJHQjdJ
      bUYwZEhKeklqcDdJbWhtTGtGbVptbHNhV0YwYVc5dUlqb2lJaXdpCmFHWXVSVzV5YjJ4c2JXVnVk
      RWxFSWpvaWIzSmtaWEpsY2pFdWMzVndjR3g1WTJoaGFXNHRibVYwSWl3aWFHWXUKVkhsd1pTSTZJ
      bTl5WkdWeVpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnYXE4SjQ5a2c3c2lPdStLUQpq
      cVo1dm9yMCtVYWI2bTZsN2QwaG8wT2dTendDSUVISEhMclE3ajQrQ0w2L3JBSVVvU1FkVGd6TDlW
      QUZPN3dTCnNmQjlLNGQ5Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIKBTUwMG1zEAoYASAF
      KICAgAoaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1p
      bnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoH
      V3JpdGVycxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zKgZBZG1p
      bnMSvS8KC0NvbnNvcnRpdW1zEq0vEuIuChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SyC4SsRcKD21h
      bnVmYWN0dXJlck1TUBKdFxqlFQoDTVNQEp0VEpIVEo8VCg9tYW51ZmFjdHVyZXJNU1ASgQYtLS0t
      LUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ0REQ0NBYktnQXdJQkFnSVVRb1NsTUVwemdsTU5F
      bzZMeUwwdnRxY1U1UkV3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5C
      Z05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5Z
      VzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdI
      aGNOTWpJeE1EQTVNRFV3T0RFNFdoY05NalV3TnpJNU1EVXdPREU0V2pCa01Rc3dDUVlEVlFRRwpF
      d0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJn
      TlZCQW9NCkRFMWhiblZtWVdOMGRYSmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNt
      VnlMVzVsZERCWk1CTUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJEcm5xdzdyZkdSeVhB
      Tjh0YmZMWmVoNURtZWpGTWpVLysvMgptcllHSzRidlpGNEE4WU44cnIyRFpUTUhaQUZJa2dSZGZ2
      SVFTWnc5WW5qbEUvVmp1RE9qUWpCQU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFR
      SC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUVVpTDZCK2lRKzN4ZSsKUFk5NVNHSmFpZjhtalRBS0Jn
      Z3Foa2pPUFFRREFnTklBREJGQWlFQWtXSmFxVmo0SWpTakF5TnZieUZ2czFYRQpKeWNLcFRyRVd3
      VUdsR3FVd2lrQ0lEVjJxVkl1bkJqQVJoSG9WRnhaY2dYa2ExUHlLcFBqckErQWxNR3lLV3AyCi0t
      LS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIuMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1J
      SURFRENDQXJlZ0F3SUJBZ0lVWWltWTNWY2ZNZUFPK25LSjJvQUM5WHpKTER3d0NnWUlLb1pJemow
      RUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFV
      RUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFN
      TUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXhNREE1TURVeE5qQXdXaGNOTWpN
      eE1EQTVNRFV5TVRBd1dqQ0JoakVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdOVkJBY1RFVFEzTGpN
      NEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhWeVpYSXhJekFNQmdO
      VkJBc1RCV0ZrYldsdU1CTUdBMVVFQ3hNTWJXRnVkV1poWTNSMWNtVnlNUjh3CkhRWURWUVFEREJa
      QlpHMXBia0J0WVc1MVptRmpkSFZ5WlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkkKemow
      REFRY0RRZ0FFeWt0K2NEWWU3Z2FZRzd4OHpnOVpmRmFmTmFGaVdMdHg1cEcxdGVZMkpLTXAvUXNP
      UDZacwp5c3JkclFBeG1rTFFabUxMMWp4R1RpS2EzZTNucUtVYlBxT0NBU0l3Z2dFZU1BNEdBMVVk
      RHdFQi93UUVBd0lICmdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJURWNBT3crdEVy
      OXNhRURpVjhCcHhxcjQvQkpqQWYKQmdOVkhTTUVHREFXZ0JRVWlMNkIraVErM3hlK1BZOTVTR0ph
      aWY4bWpUQWtCZ05WSFJFRUhUQWJnaGxqWVMxMApiMjlzY3kwM1kyUTNabVJtT1RjMkxYWjNiWE01
      TUlHWEJnZ3FBd1FGQmdjSUFRU0JpbnNpWVhSMGNuTWlPbnNpCllXSmhZeTVwYm1sMElqb2lkSEox
      WlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXUKSWpvaWJXRnVkV1po
      WTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pUVdSdGFXNUFiV0Z1ZFdaaApZM1Ix
      Y21WeUxXNWxkQ0lzSW1obUxsUjVjR1VpT2lKaFpHMXBiaUo5ZlRBS0JnZ3Foa2pPUFFRREFnTkhB
      REJFCkFpQUdnNDVRYnkxYTgxakRJeHcyWjRtcjJ2bDBTRFVkemhpc1ZjaHlybHh6aWdJZ0h6eXVp
      N3ZURjBKUmRvL0YKM0xPcXhmVGNlc1FWVnNHSUdXNFh0bUZpczFrPQotLS0tLUVORCBDRVJUSUZJ
      Q0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZKgQYtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQ0REQ0NBYktnQXdJQkFnSVVRb1NsTUVwemdsTU5FbzZMeUwwdnRxY1U1UkV3Q2dZSUtvWkl6
      ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdB
      MVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZC
      QU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJeE1EQTVNRFV3T0RFNFdoY05N
      alV3TnpJNU1EVXdPREU0V2pCa01Rc3dDUVlEVlFRRwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlh
      V05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJnTlZCQW9NCkRFMWhiblZtWVdOMGRYSmxj
      akVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUcKQnlxR1NNNDlB
      Z0VHQ0NxR1NNNDlBd0VIQTBJQUJEcm5xdzdyZkdSeVhBTjh0YmZMWmVoNURtZWpGTWpVLysvMgpt
      cllHSzRidlpGNEE4WU44cnIyRFpUTUhaQUZJa2dSZGZ2SVFTWnc5WW5qbEUvVmp1RE9qUWpCQU1B
      OEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JC
      UVVpTDZCK2lRKzN4ZSsKUFk5NVNHSmFpZjhtalRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQWtX
      SmFxVmo0SWpTakF5TnZieUZ2czFYRQpKeWNLcFRyRVd3VUdsR3FVd2lrQ0lEVjJxVkl1bkJqQVJo
      SG9WRnhaY2dYa2ExUHlLcFBqckErQWxNR3lLV3AyCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      GgZBZG1pbnMiOQoGQWRtaW5zEi8SJQgBEiESCBIGCAESAggAGhUSEwoPbWFudWZhY3R1cmVyTVNQ
      EAEaBkFkbWlucyI8CgtFbmRvcnNlbWVudBItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0
      dXJlck1TUBoGQWRtaW5zIjgKB1JlYWRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFj
      dHVyZXJNU1AaBkFkbWlucyI4CgdXcml0ZXJzEi0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFudWZh
      Y3R1cmVyTVNQGgZBZG1pbnMqBkFkbWlucxK2FgoKY2Fycmllck1TUBKnFhrDFAoDTVNQErsUErAU
      Eq0UCgpjYXJyaWVyTVNQEukFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrVENDQVo2
      Z0F3SUJBZ0lVUjFIZ3h4T29LaG9ITmlzTXZtYWszNXMxR2VRd0NnWUlLb1pJemowRUF3SXcKV2pF
      TE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1
      Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5
      TFc1bGREQWVGdzB5Ck1qRXdNRGt3TlRFd01UbGFGdzB5TlRBM01qa3dOVEV3TVRsYU1Gb3hDekFK
      QmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2
      YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1
      WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUVpCNGdSWG1oTWZFb0EzQ2Rk
      d1psYUdhV1pWVEQrR0NoTWNidXpqdjlzS3paNEtSNmtYeFZJNDE0UmNEQmQKUGdqcDBmeW5ZdktS
      Q3gvSzRlb0NBU1NLbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FF
      QXdJQnBqQWRCZ05WSFE0RUZnUVVyM2gzaWI3Zmh4dk1DZjNKWSsrN0VSY1doOVF3Q2dZSUtvWkl6
      ajBFCkF3SURTUUF3UmdJaEFNd3BFYjlWU2puM1BiTU85dndjK0wzYlhDMnVmTzJXRnh0YUVKVmZO
      cjg2QWlFQTlweXYKZHpEeXBvR2IxTkh1MmZYU1Z3cjhhdHo5MldtbFJmUDdqakNHYU5zPQotLS0t
      LUVORCBDRVJUSUZJQ0FURS0tLS0tCiK2CC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlD
      N2pDQ0FwU2dBd0lCQWdJVUVNd1lpc3dXVnhTd21obFNiTHdlZ3JwT1Nva3dDZ1lJS29aSXpqMEVB
      d0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVC
      d3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZ
      WEp5YVdWeUxXNWxkREFlRncweQpNakV3TURrd05URTNNREJhRncweU16RXdNRGt3TlRJeU1EQmFN
      SGd4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRNQzR4TXk5TWIyNWti
      MjR4RURBT0JnTlZCQW9UQjBOaGNuSnBaWEl4SGpBTUJnTlYKQkFzVEJXRmtiV2x1TUE0R0ExVUVD
      eE1IWTJGeWNtbGxjakVhTUJnR0ExVUVBd3dSUVdSdGFXNUFZMkZ5Y21sbApjaTF1WlhRd1dUQVRC
      Z2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFTYzFGS2hvZ2gxb1loZHpHUmlVR0FRClB5bit2
      bnp6NTR2L253dnVIUWtBMXBlRWdSUTdXTkx3eTBydHQ1NVMrb1Rkd0JwbUI1Ry91THZQVGRMS0pS
      QnMKbzRJQkdEQ0NBUlF3RGdZRFZSMFBBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0hR
      WURWUjBPQkJZRQpGQkF6TS9Mc0txZVkrOTN1TjBraVd4VElRVDhXTUI4R0ExVWRJd1FZTUJhQUZL
      OTRkNG0rMzRjYnpBbjl5V1B2CnV4RVhGb2ZVTUNRR0ExVWRFUVFkTUJ1Q0dXTmhMWFJ2YjJ4ekxU
      WmtOR00yWmpjMlpHWXRjelEzYW5Bd2dZMEcKQ0NvREJBVUdCd2dCQklHQWV5SmhkSFJ5Y3lJNmV5
      SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aQpPaUowY25WbElpd2lhR1l1UVdabWFX
      eHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1CmRFbEVJam9pUVdSdGFX
      NUFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaVlXUnRhVzRpZlgwd0NnWUkKS29aSXpq
      MEVBd0lEU0FBd1JRSWhBT09vWEc1dGFEL0FmT3ZMbWl3Ry9ZUU1TVEhweEJ6bXEvcnlmY01pSHo2
      YQpBaUJrUWJFOFpGQWJ6Mnlqb2hucldjaHFyQUFJeWMxOEFCVEttVnJsMjlySE9RPT0KLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hBMjU2SukFLS0tLS1CRUdJTiBDRVJUSUZJ
      Q0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVUjFIZ3h4T29LaG9ITmlzTXZtYWszNXMxR2VR
      d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S
      dmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZ
      RFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qRXdNRGt3TlRFd01UbGFGdzB5TlRB
      M01qa3dOVEV3TVRsYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0
      eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFV
      RUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05D
      CkFBUVpCNGdSWG1oTWZFb0EzQ2Rkd1psYUdhV1pWVEQrR0NoTWNidXpqdjlzS3paNEtSNmtYeFZJ
      NDE0UmNEQmQKUGdqcDBmeW5ZdktSQ3gvSzRlb0NBU1NLbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFE
      QVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVyM2gzaWI3Zmh4dk1DZjNK
      WSsrN0VSY1doOVF3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFNd3BFYjlWU2puM1BiTU85dndj
      K0wzYlhDMnVmTzJXRnh0YUVKVmZOcjg2QWlFQTlweXYKZHpEeXBvR2IxTkh1MmZYU1Z3cjhhdHo5
      MldtbFJmUDdqakNHYU5zPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjMKB1dy
      aXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiNAoGQWRtaW5z
      EioSIAgBEhwSCBIGCAESAggAGhASDgoKY2Fycmllck1TUBABGgZBZG1pbnMiNwoLRW5kb3JzZW1l
      bnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiMwoHUmVhZGVycxIo
      Eh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyoGQWRtaW5zGkAKFUNoYW5u
      ZWxDcmVhdGlvblBvbGljeRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5z
      KhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAESBBICEgAaFy9DaGFubmVs
      L09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxomChBIYXNoaW5nQWxnb3Jp
      dGhtEhISCAoGU0hBMjU2GgZBZG1pbnMaLQoZQmxvY2tEYXRhSGFzaGluZ1N0cnVjdHVyZRIQEgYI
      /////w8aBkFkbWlucxpOChBPcmRlcmVyQWRkcmVzc2VzEjoSHwodb3JkZXJlcjEuc3VwcGx5Y2hh
      aW4tbmV0OjcwNTAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwK
      CgoGVjFfNF8zEgAaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIi
      CgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dy
      aXRlcnMaBkFkbWlucyoGQWRtaW5zGgoKAAoACgAKAAoA

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5     
