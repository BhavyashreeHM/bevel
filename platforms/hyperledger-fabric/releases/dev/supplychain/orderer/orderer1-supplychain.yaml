apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/Mohitv/bevel.git
    ref: main
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.49.1:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIDQUYWjgp++JZEfmD0f7MR1e+dzUTQXSS2T2jhP/gQv3Eq5eCqteCqheCngKWggBEAEaBgiw
      jouZBiIKc3lzY2hhbm5lbCpAMzMwZTFlZWI5MGI4NmQ4ODAyOWE0M2EzMzFhMmZkNjhmZDM2MDhh
      MzUzYWM5NGNkODdlOTk0ZGY0ODlhNjdlYhIaEhiUlcU9n5VhVAjcY7eRRQ0MFqDrQQtWAPESq10K
      qF0SpV0SnysKB09yZGVyZXISkysS1hYKDnN1cHBseWNoYWluTVNQEsMWGs8UCgNNU1ASxxQSvBQS
      uRQKDnN1cHBseWNoYWluTVNQEvUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBVEND
      QWFhZ0F3SUJBZ0lVZTU3bUhCNjU2TEJuZU9hNkR5WFowRENJYSs4d0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3T1RFMU1EWXhOalEwV2hjTk1qVXdOekExTURZeE5qUTBX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJHRWpK
      a1ZSN2htV3dlSnNWOHp4VjVkT3lBTGFDcGE0OXBMRHFMd2xJcUV6ajZoSXArS0UKY2Z3TGNxMTVa
      ZkNJS09MaVQ4L0o1YSsycUxOWWcvWU9IQkNqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCVHpHWDVPWGp2emovSzJMQ3U5bmZRU1ha
      UGhGekFLCkJnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTlYSUVSWmJpZHdtUlo4SG5DaHRwaDFSY3lq
      V2w4bC82dDBqYS9hUHYKOU1FQ0lRRFhqaUxKbEcreHE2dzNiNW1udnJJSGJmZGcvOHdmcGNLaFBH
      cCtBc05xS3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKmCC0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlDNGpDQ0FvaWdBd0lCQWdJVVVRY3ZOcllvNnA3QUI5OG9hWnFOUDBwdkk4
      QXdDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dR
      WURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd09URTFNRFl5TkRBd1do
      Y05Nak13T1RFMU1EWXlPVEF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05U
      RXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZR
      UUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr
      dwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRVFDaEJEZkZPVHNJNVI5TWRMTXBRRnZs
      ckZERzFheWQ1CkoxTGxrOW5sOXVYT2tTSi8yODJScE53WUR4SFZVc2hVNDhRWnp1WkVYY0xPTDBK
      RlVJU3BwNk9DQVJRd2dnRVEKTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCVC9WTjc2KzlZMgpBVllpS1R2Nk9rbUIraThXYWpBZkJnTlZIU01FR0RB
      V2dCVHpHWDVPWGp2emovSzJMQ3U5bmZRU1haUGhGekFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5
      c2N5MDFOalkzWXpZM1ptWTNMVGgzYm5ZME1JR0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJ
      NmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVda
      bWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3
      CmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBF
      QXdJRFNBQXcKUlFJaEFKRWtSZDMrVGNmUTk5TFRrMGFBZ2JKZDBwK21iVjVLYmNSSTE2Uk1Vb3lm
      QWlBc2FVUWhIaE1IenFDVApma2hYN0d2clFpQ3kxR3IvREFQNlhZZ0lYamJwQkE9PQotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK9QUtLS0tLUJFR0lOIENFUlRJRklD
      QVRFLS0tLS0KTUlJQ0FUQ0NBYWFnQXdJQkFnSVVlNTdtSEI2NTZMQm5lT2E2RHlYWjBEQ0lhKzh3
      Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2
      YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlE
      VlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qSXdPVEUxTURZeE5qUTBXaGNO
      TWpVd056QTFNRFl4TmpRMFdqQmVNUXN3Q1FZRFZRUUdFd0pIUWpFUApNQTBHQTFVRUNBd0dURzl1
      Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5ClpYSXhHekFa
      QmdOVkJBTU1FbU5oTG5OMWNIQnNlV05vWVdsdUxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUcK
      U000OUF3RUhBMElBQkdFakprVlI3aG1Xd2VKc1Y4enhWNWRPeUFMYUNwYTQ5cExEcUx3bElxRXpq
      NmhJcCtLRQpjZndMY3ExNVpmQ0lLT0xpVDgvSjVhKzJxTE5ZZy9ZT0hCQ2pRakJBTUE4R0ExVWRF
      d0VCL3dRRk1BTUJBZjh3CkRnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJUekdYNU9Y
      anZ6ai9LMkxDdTluZlFTWFpQaEZ6QUsKQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBOVhJRVJaYmlk
      d21SWjhIbkNodHBoMVJjeWpXbDhsLzZ0MGphL2FQdgo5TUVDSVFEWGppTEpsRyt4cTZ3M2I1bW52
      cklIYmZkZy84d2ZwY0toUEdwK0FzTnFLdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZB
      ZG1pbnMiOwoLRW5kb3JzZW1lbnQSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1T
      UBoGQWRtaW5zIjcKB1JlYWRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1T
      UBoGQWRtaW5zIjcKB1dyaXRlcnMSLBIiCAESHhIIEgYIARICCAAaEhIQCg5zdXBwbHljaGFpbk1T
      UBoGQWRtaW5zIjgKBkFkbWlucxIuEiQIARIgEggSBggBEgIIABoUEhIKDnN1cHBseWNoYWluTVNQ
      EAEaBkFkbWlucyoGQWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4K
      DEJhdGNoVGltZW91dBIOEgQKAjJzGgZBZG1pbnMaHwoTQ2hhbm5lbFJlc3RyaWN0aW9ucxIIGgZB
      ZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZWMV80XzISABoGQWRtaW5zGooSCg1Db25zZW5z
      dXNUeXBlEvgREu0RCghldGNkcmFmdBLgEQrJEQoYb3JkZXJlcjEuc3VwcGx5Y2hhaW4tbmV0EIo3
      GtMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBekNDQXFtZ0F3SUJBZ0lVU0VYM1By
      SUpVTFNucnNoQUJnQ3Z4cC81Q0pBd0NnWUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1Iw
      SXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZR
      UUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3Ckho
      Y05Nakl3T1RFMU1EWXlOREF3V2hjTk1qTXdPVEUxTURZeU9UQXdXakJ4TVFzd0NRWURWUVFHRXdK
      SFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdk
      UGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJsY21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21W
      eU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndO
      Q0FBVDhsSmUwNkt0MTdKV1pnbTgwVTZETFZ3Sy8KbksvdFJXUlpIbWtMdVRlVnFHMkZpK082WDFR
      Rzh6N3JaZnZGaysyM21RNTZETVFJNjZTZkJNeEk2S2U2bzRJQgpNRENDQVN3d0RnWURWUjBQQVFI
      L0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGCkJRY0RBakFNQmdO
      VkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU1VmbVdBSWJDcXd5a2ZmWjdTa2ZEbG5YS2cKRFRB
      ZkJnTlZIU01FR0RBV2dCVHpHWDVPWGp2emovSzJMQ3U5bmZRU1haUGhGekEvQmdOVkhSRUVPREEy
      Z2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhTQ0dtOXlaR1Z5WlhJeExtUmxkbVZz
      YjNBdWJHOWpZV3d1ClkyOXRNR3dHQ0NvREJBVUdCd2dCQkdCN0ltRjBkSEp6SWpwN0ltaG1Ma0Zt
      Wm1sc2FXRjBhVzl1SWpvaUlpd2kKYUdZdVJXNXliMnhzYldWdWRFbEVJam9pYjNKa1pYSmxjakV1
      YzNWd2NHeDVZMmhoYVc0dGJtVjBJaXdpYUdZdQpWSGx3WlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJ
      S29aSXpqMEVBd0lEU0FBd1JRSWhBSWlwOG5SN3JNRkVFSHhzCkxVWDBGOWV3UmFLbVd4MTVsRTYr
      SXhUdlBGQUZBaUFYMHV4YUFmWVluSEpLWUtOczV2dCtjandpcS85a0kxaFIKWHpZTUp4blQydz09
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KItMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSURBekNDQXFtZ0F3SUJBZ0lVU0VYM1BySUpVTFNucnNoQUJnQ3Z4cC81Q0pBd0NnWUlLb1pJ
      emowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBH
      QTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpq
      WVM1emRYQndiSGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3T1RFMU1EWXlOREF3V2hjTk1qTXdPVEUx
      TURZeU9UQXdXakJ4TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1
      TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJs
      Y21WeU1TRXdId1lEVlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFU
      QmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBVDhsSmUwNkt0MTdKV1pnbTgwVTZETFZ3Sy8K
      bksvdFJXUlpIbWtMdVRlVnFHMkZpK082WDFRRzh6N3JaZnZGaysyM21RNTZETVFJNjZTZkJNeEk2
      S2U2bzRJQgpNRENDQVN3d0RnWURWUjBQQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dB
      UVVGQndNQkJnZ3JCZ0VGCkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCU1Vm
      bVdBSWJDcXd5a2ZmWjdTa2ZEbG5YS2cKRFRBZkJnTlZIU01FR0RBV2dCVHpHWDVPWGp2emovSzJM
      Q3U5bmZRU1haUGhGekEvQmdOVkhSRUVPREEyZ2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBi
      aTF1WlhTQ0dtOXlaR1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1ClkyOXRNR3dHQ0NvREJBVUdC
      d2dCQkdCN0ltRjBkSEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2kKYUdZdVJXNXli
      MnhzYldWdWRFbEVJam9pYjNKa1pYSmxjakV1YzNWd2NHeDVZMmhoYVc0dGJtVjBJaXdpYUdZdQpW
      SGx3WlNJNkltOXlaR1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBSWlwOG5SN3JN
      RkVFSHhzCkxVWDBGOWV3UmFLbVd4MTVsRTYrSXhUdlBGQUZBaUFYMHV4YUFmWVluSEpLWUtOczV2
      dCtjandpcS85a0kxaFIKWHpZTUp4blQydz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KEhIK
      BTUwMG1zEAoYASAFKICAgAoaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFk
      bWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRlcnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMS
      CgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVycxoG
      QWRtaW5zKgZBZG1pbnMSvS8KC0NvbnNvcnRpdW1zEq0vEuIuChVTdXBwbHlDaGFpbkNvbnNvcnRp
      dW0SyC4SsRcKD21hbnVmYWN0dXJlck1TUBKdFxqlFQoDTVNQEp0VEpIVEo8VCg9tYW51ZmFjdHVy
      ZXJNU1ASgQYtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ0REQ0NBYktnQXdJQkFnSVVk
      NzVYUkRLZ2UzREF4NG03V2dKdCsyY1FSeDB3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVC
      aE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdF
      d1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRY
      SmwKY2kxdVpYUXdIaGNOTWpJd09URTFNRFl4T0RRMldoY05NalV3TnpBMU1EWXhPRFEyV2pCa01R
      c3dDUVlEVlFRRwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlhV05vTVE4d0RRWURWUVFIREFaYWRY
      SnBZMmd4RlRBVEJnTlZCQW9NCkRFMWhiblZtWVdOMGRYSmxjakVjTUJvR0ExVUVBd3dUWTJFdWJX
      RnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJO
      VG1qcXAyLzBrTmlpbzJJTmYxdkVLSEtYczhENUdHVGYvUgpwVGhDMXVrU21Ca0UxbG1JZFhicjVk
      dTFhS1I0V2JsRlRKZDE2dEJESFFzTVpGdGIwWnFqUWpCQU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFm
      OHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCUmxub1RGTVFGMGZEOXIKcEVZSWpt
      bHlrUUhrRHpBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQXZkNDlqSVhMb3d5ekMvQ2ZFUjRqeHF1
      NgpaajVoYjlGMm16Vk1pd0FzV29jQ0lHUkNySzRUd3FIeWgwdzcvTU1TSE9hYTVOdEFSTmJkcWhj
      cS9VOVhia0xKCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIuMILS0tLS1CRUdJTiBDRVJUSUZJ
      Q0FURS0tLS0tCk1JSURFVENDQXJlZ0F3SUJBZ0lVZXJNNUQ3MVVHVS81ZUNQQXdjZ1d3NUVxUW1B
      d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21s
      amFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJ
      eEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdPVEUxTURZ
      eU5qQXdXaGNOTWpNd09URTFNRFl6TVRBd1dqQ0JoakVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdO
      VkJBY1RFVFEzTGpNNEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhW
      eVpYSXhJekFNQmdOVkJBc1RCV0ZrYldsdU1CTUdBMVVFQ3hNTWJXRnVkV1poWTNSMWNtVnlNUjh3
      CkhRWURWUVFEREJaQlpHMXBia0J0WVc1MVptRmpkSFZ5WlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBD
      QVFZSUtvWkkKemowREFRY0RRZ0FFR2xNU3FoTk1BQnBXTmllVXBGemJjb2ZQZ1hwdzNlalAvOWhJ
      Q2hUL3Z0Q2dGWFd6cVIvTQpTMCsrenc5cllVZXBLdnVEaFZkVDRzM2F5enBFeWRHdFNxT0NBU0l3
      Z2dFZU1BNEdBMVVkRHdFQi93UUVBd0lICmdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FX
      QkJSdFR1U04vdXBuTlI3S1pHelltc2hrN2VNR016QWYKQmdOVkhTTUVHREFXZ0JSbG5vVEZNUUYw
      ZkQ5cnBFWUlqbWx5a1FIa0R6QWtCZ05WSFJFRUhUQWJnaGxqWVMxMApiMjlzY3kwM1kyUTNabVJt
      T1RjMkxXUTBOM0k0TUlHWEJnZ3FBd1FGQmdjSUFRU0JpbnNpWVhSMGNuTWlPbnNpCllXSmhZeTVw
      Ym1sMElqb2lkSEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXUK
      SWpvaWJXRnVkV1poWTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pUVdSdGFXNUFi
      V0Z1ZFdaaApZM1IxY21WeUxXNWxkQ0lzSW1obUxsUjVjR1VpT2lKaFpHMXBiaUo5ZlRBS0JnZ3Fo
      a2pPUFFRREFnTklBREJGCkFpRUE1QXRLLyt2V2dIWUF5MnV2dXAxMkIvUVZoMTNrSnBmMkJPY2ti
      L1pkNWNvQ0lCVDVxSUJCSzFGcjJmZm8KR2RNRmRLanFHRElLSXk0ZUwvRTloR3VQZmRJUgotLS0t
      LUVORCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZKgQYtLS0tLUJFR0lOIENFUlRJ
      RklDQVRFLS0tLS0KTUlJQ0REQ0NBYktnQXdJQkFnSVVkNzVYUkRLZ2UzREF4NG03V2dKdCsyY1FS
      eDB3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFj
      bWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnla
      WEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJd09URTFN
      RFl4T0RRMldoY05NalV3TnpBMU1EWXhPRFEyV2pCa01Rc3dDUVlEVlFRRwpFd0pEU0RFUE1BMEdB
      MVVFQ0F3R1duVnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJnTlZCQW9NCkRFMWhi
      blZtWVdOMGRYSmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1C
      TUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJOVG1qcXAyLzBrTmlpbzJJTmYxdkVLSEtY
      czhENUdHVGYvUgpwVGhDMXVrU21Ca0UxbG1JZFhicjVkdTFhS1I0V2JsRlRKZDE2dEJESFFzTVpG
      dGIwWnFqUWpCQU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1C
      MEdBMVVkRGdRV0JCUmxub1RGTVFGMGZEOXIKcEVZSWptbHlrUUhrRHpBS0JnZ3Foa2pPUFFRREFn
      TklBREJGQWlFQXZkNDlqSVhMb3d5ekMvQ2ZFUjRqeHF1NgpaajVoYjlGMm16Vk1pd0FzV29jQ0lH
      UkNySzRUd3FIeWgwdzcvTU1TSE9hYTVOdEFSTmJkcWhjcS9VOVhia0xKCi0tLS0tRU5EIENFUlRJ
      RklDQVRFLS0tLS0KGgZBZG1pbnMiOQoGQWRtaW5zEi8SJQgBEiESCBIGCAESAggAGhUSEwoPbWFu
      dWZhY3R1cmVyTVNQEAEaBkFkbWlucyI8CgtFbmRvcnNlbWVudBItEiMIARIfEggSBggBEgIIABoT
      EhEKD21hbnVmYWN0dXJlck1TUBoGQWRtaW5zIjgKB1JlYWRlcnMSLRIjCAESHxIIEgYIARICCAAa
      ExIRCg9tYW51ZmFjdHVyZXJNU1AaBkFkbWlucyI4CgdXcml0ZXJzEi0SIwgBEh8SCBIGCAESAggA
      GhMSEQoPbWFudWZhY3R1cmVyTVNQGgZBZG1pbnMqBkFkbWlucxK2FgoKY2Fycmllck1TUBKnFhrD
      FAoDTVNQErsUErAUEq0UCgpjYXJyaWVyTVNQEukFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSUIrRENDQVo2Z0F3SUJBZ0lVYU9VdkZXL2tISmdqU3dhK3VaYnJ1d01mcXRNd0NnWUlLb1pJ
      emowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBH
      QTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVq
      WVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTVNVFV3TmpJd05EWmFGdzB5TlRBM01EVXdOakl3
      TkRaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05W
      QkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1
      WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBUis5c3la
      Z0JBV05rbzIwTk9lellPOXlWN2luVS81Rm10L1IxZHVra1pubXBWSjBRUmg2NGVFd3ppUlVrVE4K
      ODdXZlhMcUgzWktpbUxlSXhHaDZFL2RDbzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdB
      MVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVla0h6ck9ncHNsd0hXdUpzaEZtelBpTkdE
      d293Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFLb1JWUEt1QWJ5VC90T3JHL1JXTExLTlhyV3Fy
      bmRuRGhNYmpmZEFZdldBQWlCbmQ1WkkKY1FOekIyWlhJdFUwcTVQR3lDQzZpeTZmT1NKOVg4RTkv
      ZmthdWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiK2CC0tLS0tQkVHSU4gQ0VSVElGSUNB
      VEUtLS0tLQpNSUlDN2pDQ0FwU2dBd0lCQWdJVUNkYzRiY0R0QWd0K3c4V3pFdFhzU3VYMnp3MHdD
      Z1lJS29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi
      akVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURW
      UVFEREE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNakE1TVRVd05qSTRNREJhRncweU16QTVN
      VFV3TmpNek1EQmFNSGd4Q3pBSkJnTlZCQVlUQWtkQ01Sc3dHUVlEClZRUUhFeEkxTVM0MU1DOHRN
      QzR4TXk5TWIyNWtiMjR4RURBT0JnTlZCQW9UQjBOaGNuSnBaWEl4SGpBTUJnTlYKQkFzVEJXRmti
      V2x1TUE0R0ExVUVDeE1IWTJGeWNtbGxjakVhTUJnR0ExVUVBd3dSUVdSdGFXNUFZMkZ5Y21sbApj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DQUFSNWhwRmE4Z3R2cHVaclFJ
      dFZ5QURhCmszalhIZVc4bElVVkJqa0pDSFZvVmVtSDdyT0U1NWxxNVN2VE1DZys2WVdxRURvQTZt
      WThEUEdQbUt5NHBnUlcKbzRJQkdEQ0NBUlF3RGdZRFZSMFBBUUgvQkFRREFnZUFNQXdHQTFVZEV3
      RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGR3Y0TDFvQnlhVURkR1YyR0RCWEZlZ01OTU54TUI4R0Ex
      VWRJd1FZTUJhQUZIcEI4NnpvS2JKY0IxcmliSVJaCnN6NGpSZzhLTUNRR0ExVWRFUVFkTUJ1Q0dX
      TmhMWFJ2YjJ4ekxUWmtOR00yWmpjMlpHWXROWFpuTkRZd2dZMEcKQ0NvREJBVUdCd2dCQklHQWV5
      SmhkSFJ5Y3lJNmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aQpPaUowY25WbElp
      d2lhR1l1UVdabWFXeHBZWFJwYjI0aU9pSmpZWEp5YVdWeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1CmRF
      bEVJam9pUVdSdGFXNUFZMkZ5Y21sbGNpMXVaWFFpTENKb1ppNVVlWEJsSWpvaVlXUnRhVzRpZlgw
      d0NnWUkKS29aSXpqMEVBd0lEU0FBd1JRSWhBTlhjc3V5c041U2txQnpTcnplamhxOExJWWYvQW1h
      NEFFRytkcER4RHBnOApBaUJMYWtWclZaWXZNRjdteUpvOGFQNUtQMTE0dGFPVmhESFgrNXdTb3NX
      ZW5RPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hBMjU2SukFLS0tLS1C
      RUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIrRENDQVo2Z0F3SUJBZ0lVYU9VdkZXL2tISmdqU3dh
      K3VaYnJ1d01mcXRNd0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdO
      VkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhK
      eWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTVNVFV3TmpJ
      d05EWmFGdzB5TlRBM01EVXdOakl3TkRaYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFR
      SURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxs
      Y2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dx
      aGtqT1BRTUJCd05DCkFBUis5c3laZ0JBV05rbzIwTk9lellPOXlWN2luVS81Rm10L1IxZHVra1pu
      bXBWSjBRUmg2NGVFd3ppUlVrVE4KODdXZlhMcUgzWktpbUxlSXhHaDZFL2RDbzBJd1FEQVBCZ05W
      SFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVla0h6
      ck9ncHNsd0hXdUpzaEZtelBpTkdEd293Q2dZSUtvWkl6ajBFCkF3SURTQUF3UlFJaEFLb1JWUEt1
      QWJ5VC90T3JHL1JXTExLTlhyV3FybmRuRGhNYmpmZEFZdldBQWlCbmQ1WkkKY1FOekIyWlhJdFUw
      cTVQR3lDQzZpeTZmT1NKOVg4RTkvZmthdWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoG
      QWRtaW5zIjcKC0VuZG9yc2VtZW50EigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoG
      QWRtaW5zIjMKB1JlYWRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1p
      bnMiMwoHV3JpdGVycxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyI0
      CgZBZG1pbnMSKhIgCAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlucyoGQWRt
      aW5zGkAKFUNoYW5uZWxDcmVhdGlvblBvbGljeRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVsL09y
      ZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAESBBIC
      EgAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxomChBI
      YXNoaW5nQWxnb3JpdGhtEhISCAoGU0hBMjU2GgZBZG1pbnMaLQoZQmxvY2tEYXRhSGFzaGluZ1N0
      cnVjdHVyZRIQEgYI/////w8aBkFkbWlucxpOChBPcmRlcmVyQWRkcmVzc2VzEjoSHwodb3JkZXJl
      cjEuc3VwcGx5Y2hhaW4tbmV0OjcwNTAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYKDENhcGFi
      aWxpdGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dyaXRl
      cnMaBkFkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIiCgdSZWFkZXJz
      EhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyoGQWRtaW5zGgoKAAoACgAKAAoA

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5     
