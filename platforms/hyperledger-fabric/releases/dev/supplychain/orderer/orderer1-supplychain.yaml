apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/Mohitv/bevel.git
    ref: main
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.49.1:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIOadqSrug+CK4tm/riRqv4CuiJs3CWeVc5u0cjvAnRxNEppeCpdeCpReCngKWggBEAEaBgj2
      mb6WBiIKc3lzY2hhbm5lbCpAOGQzNWU2NDA5YzBiNDZhOGU5ZGE2MDEzMDMwMDEyMTc2ODE4ZTc2
      NzU0Mzg0NmVkNDVhZTRjOTBkNTJhNDllOBIaEhhThrWTAimgWjD9lbzKOKoBA5cOxVYTp9ISl10K
      lF0SkV0SsS8KC0NvbnNvcnRpdW1zEqEvEtYuChVTdXBwbHlDaGFpbkNvbnNvcnRpdW0SvC4SsRcK
      D21hbnVmYWN0dXJlck1TUBKdFxqlFQoDTVNQEp0VEpIVEo8VCg9tYW51ZmFjdHVyZXJNU1ASgQYt
      LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQ0REQ0NBYktnQXdJQkFnSVVRTjNsNGpXeWVB
      cFRtYmpYSU1SWlFEMG52NTB3Q2dZSUtvWkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6
      QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RB
      eE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpY
      UXdIaGNOTWpJd056RTBNRE14TVRVMVdoY05NalV3TlRBek1ETXhNVFUxV2pCa01Rc3dDUVlEVlFR
      RwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1duVnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRB
      VEJnTlZCQW9NCkRFMWhiblZtWVdOMGRYSmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNS
      MWNtVnlMVzVsZERCWk1CTUcKQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJFZDZtV0lDYVVB
      c3NUbHBKOTlQQi93dnNCNHlKbmsvaEI5Tgp1S1h2M04vVEgyQWh0Y0s0RHhKTmRld3hZbUlEc3Rl
      R3UyMmlYTTgrNUdQNDVOWHdrTjZqUWpCQU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIw
      UEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCU3ZUK01zQzF2S1o4L2wKcGJYUC9oZzBCa3JPWkRB
      S0JnZ3Foa2pPUFFRREFnTklBREJGQWlFQXJtQmE0YmpDNWo5MU94NERwNFd4WTIyYgo0bVhBVkcz
      em4vbnFHQ0wwdlN3Q0lGcEFjK0FkWlo0ZDBmdUZrSWFHRXRUVXBNRmJhU1AwcjJ6enpiT3Z5cUlx
      Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIuMILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
      Ck1JSURFVENDQXJlZ0F3SUJBZ0lVRWlidWt2RDVKTFhoM3UyanA3UGxncHdwOXo0d0NnWUlLb1pJ
      emowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBH
      QTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05W
      QkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdOekUwTURNeE9UQXdXaGNO
      TWpNd056RTBNRE15TkRBd1dqQ0JoakVMTUFrR0ExVUUKQmhNQ1EwZ3hHakFZQmdOVkJBY1RFVFEz
      TGpNNEx6Z3VOVFF2V25WeWFXTm9NUlV3RXdZRFZRUUtFd3hOWVc1MQpabUZqZEhWeVpYSXhJekFN
      QmdOVkJBc1RCV0ZrYldsdU1CTUdBMVVFQ3hNTWJXRnVkV1poWTNSMWNtVnlNUjh3CkhRWURWUVFE
      REJaQlpHMXBia0J0WVc1MVptRmpkSFZ5WlhJdGJtVjBNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkkK
      emowREFRY0RRZ0FFU2tIQW1SQjJ6QlpFVTRlc3NVMThkZUNSMElQT0ZoWmduZER0WUtiZ3EzRURx
      SlRvOEZadQpmeTJMWEdDUk5IdjNDZVJHemVMM3FUVk52OUxxRmI5SG1LT0NBU0l3Z2dFZU1BNEdB
      MVVkRHdFQi93UUVBd0lICmdEQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJTYkwwdE13
      RkRBMERPUk13WVg2a2JmVi9uTk5UQWYKQmdOVkhTTUVHREFXZ0JTdlQrTXNDMXZLWjgvbHBiWFAv
      aGcwQmtyT1pEQWtCZ05WSFJFRUhUQWJnaGxqWVMxMApiMjlzY3kwM1kyUTNabVJtT1RjMkxYQXlh
      bkF5TUlHWEJnZ3FBd1FGQmdjSUFRU0JpbnNpWVhSMGNuTWlPbnNpCllXSmhZeTVwYm1sMElqb2lk
      SEoxWlNJc0ltRmtiV2x1SWpvaWRISjFaU0lzSW1obUxrRm1abWxzYVdGMGFXOXUKSWpvaWJXRnVk
      V1poWTNSMWNtVnlJaXdpYUdZdVJXNXliMnhzYldWdWRFbEVJam9pUVdSdGFXNUFiV0Z1ZFdaaApZ
      M1IxY21WeUxXNWxkQ0lzSW1obUxsUjVjR1VpT2lKaFpHMXBiaUo5ZlRBS0JnZ3Foa2pPUFFRREFn
      TklBREJGCkFpRUEyYmlweEJzYVplYWNHVTUvQVVYcUNsQW8vQmc0b2VPcGNWMnEySFV3Z3pVQ0lD
      dkdycUZWSFdCL0FmOU8KRmVUQU41MGpJVVhqK04yN3VzL2MzMmhmVGhPSAotLS0tLUVORCBDRVJU
      SUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZKgQYtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0t
      LS0KTUlJQ0REQ0NBYktnQXdJQkFnSVVRTjNsNGpXeWVBcFRtYmpYSU1SWlFEMG52NTB3Q2dZSUtv
      Wkl6ajBFQXdJdwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1B
      MEdBMVVFQnd3R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJn
      TlZCQU1NRTJOaExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJd056RTBNRE14TVRVMVdo
      Y05NalV3TlRBek1ETXhNVFUxV2pCa01Rc3dDUVlEVlFRRwpFd0pEU0RFUE1BMEdBMVVFQ0F3R1du
      VnlhV05vTVE4d0RRWURWUVFIREFaYWRYSnBZMmd4RlRBVEJnTlZCQW9NCkRFMWhiblZtWVdOMGRY
      SmxjakVjTUJvR0ExVUVBd3dUWTJFdWJXRnVkV1poWTNSMWNtVnlMVzVsZERCWk1CTUcKQnlxR1NN
      NDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJFZDZtV0lDYVVBc3NUbHBKOTlQQi93dnNCNHlKbmsvaEI5
      Tgp1S1h2M04vVEgyQWh0Y0s0RHhKTmRld3hZbUlEc3RlR3UyMmlYTTgrNUdQNDVOWHdrTjZqUWpC
      QU1BOEdBMVVkCkV3RUIvd1FGTUFNQkFmOHdEZ1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdR
      V0JCU3ZUK01zQzF2S1o4L2wKcGJYUC9oZzBCa3JPWkRBS0JnZ3Foa2pPUFFRREFnTklBREJGQWlF
      QXJtQmE0YmpDNWo5MU94NERwNFd4WTIyYgo0bVhBVkczem4vbnFHQ0wwdlN3Q0lGcEFjK0FkWlo0
      ZDBmdUZrSWFHRXRUVXBNRmJhU1AwcjJ6enpiT3Z5cUlxCi0tLS0tRU5EIENFUlRJRklDQVRFLS0t
      LS0KGgZBZG1pbnMiOAoHUmVhZGVycxItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0dXJl
      ck1TUBoGQWRtaW5zIjgKB1dyaXRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVy
      ZXJNU1AaBkFkbWlucyI5CgZBZG1pbnMSLxIlCAESIRIIEgYIARICCAAaFRITCg9tYW51ZmFjdHVy
      ZXJNU1AQARoGQWRtaW5zIjwKC0VuZG9yc2VtZW50Ei0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFu
      dWZhY3R1cmVyTVNQGgZBZG1pbnMqBkFkbWlucxKqFgoKY2Fycmllck1TUBKbFhq3FAoDTVNQEq8U
      EqQUEqEUCgpjYXJyaWVyTVNQEuUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUI5ekND
      QVo2Z0F3SUJBZ0lVYTc0Zlc5Z0hFM0l3SFI4MURMZU9Fd25FYm1Zd0NnWUlLb1pJemowRUF3SXcK
      V2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlh
      V1Z5TFc1bGREQWVGdzB5Ck1qQTNNVFF3TXpFME1EQmFGdzB5TlRBMU1ETXdNekUwTURCYU1Gb3hD
      ekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0eER6QU5CZ05WQkFjTUJreHZi
      bVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFVRUF3d09ZMkV1WTJGeWNtbGxj
      aTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05DCkFBVGZmYXByRk5HL1J2ekNv
      bUNQazRiVy9XOUJNelErcW83TkxscFJhd2JQVTBMTXN5NTkveWVJL0lmS3phZUQKWXFvZVUrUUVV
      Tlk2amNxcUZOZnd0NExybzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BNEdBMVVkRHdFQgov
      d1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVhMmd0aTU1RmFVUlhRRXh0NTF2M3loVnZYRGN3Q2dZSUtv
      Wkl6ajBFCkF3SURSd0F3UkFJZ1BPMzMwQnJ4alZYdkZRUklQaWlETnpkSHZGUU9ocy9ZL1BwMmFT
      S0RYaDRDSUJRV0IreE8KbUdWZFVHYXE5bkRGVkJjUDNBMXJjc25yRDZLcTVRaS9sa3ptCi0tLS0t
      RU5EIENFUlRJRklDQVRFLS0tLS0KIrIILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM3
      VENDQXBTZ0F3SUJBZ0lVRStsaTQ4dWZIcHhqeC8xclZIL0kvdVdDeEtNd0NnWUlLb1pJemowRUF3
      SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3
      d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allY
      SnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTNNVFF3TXpJeE1EQmFGdzB5TXpBM01UUXdNekkyTURCYU1I
      Z3hDekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2Iy
      NHhFREFPQmdOVkJBb1RCME5oY25KcFpYSXhIakFNQmdOVgpCQXNUQldGa2JXbHVNQTRHQTFVRUN4
      TUhZMkZ5Y21sbGNqRWFNQmdHQTFVRUF3d1JRV1J0YVc1QVkyRnljbWxsCmNpMXVaWFF3V1RBVEJn
      Y3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJzSVZSVzhqNGhDbitOSXF6ZExUNGYKM3FIVVNj
      Q1FTa0JPNlJ4OFB3R3BNbDdsaXJZNDRYM0hzUWVydlcyRVhVZFlhY1JkdmU0ZHUvVExEWnd5aHlm
      RQpvNElCR0RDQ0FSUXdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZ
      RFZSME9CQllFCkZQS3M2WkVkdUVZV3dHeDE0SGVtYy8xUVg2M1pNQjhHQTFVZEl3UVlNQmFBRkd0
      b0xZdWVSV2xFVjBCTWJlZGIKOThvVmIxdzNNQ1FHQTFVZEVRUWRNQnVDR1dOaExYUnZiMnh6TFRa
      a05HTTJaamMyWkdZdFoyZHVZM0V3Z1kwRwpDQ29EQkFVR0J3Z0JCSUdBZXlKaGRIUnljeUk2ZXlK
      aFltRmpMbWx1YVhRaU9pSjBjblZsSWl3aVlXUnRhVzRpCk9pSjBjblZsSWl3aWFHWXVRV1ptYVd4
      cFlYUnBiMjRpT2lKallYSnlhV1Z5SWl3aWFHWXVSVzV5YjJ4c2JXVnUKZEVsRUlqb2lRV1J0YVc1
      QVkyRnljbWxsY2kxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSQpLb1pJemow
      RUF3SURSd0F3UkFJZ1RYbitpQ0JZcWM0b284K3NiY2oxaXVONWtLQlZjYmRrS0V3WG9XbXI3aFlD
      CklFNFZ1Unc5aUVNOFZBZ0RzY3dhVnNjSUhvTzRmM01SenJKTDFKM2w5WjVKCi0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrlBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt
      LS0tLQpNSUlCOXpDQ0FaNmdBd0lCQWdJVWE3NGZXOWdIRTNJd0hSODFETGVPRXduRWJtWXdDZ1lJ
      S29aSXpqMEVBd0l3CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ
      TUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFE
      REE1allTNWpZWEp5YVdWeUxXNWxkREFlRncweQpNakEzTVRRd016RTBNREJhRncweU5UQTFNRE13
      TXpFME1EQmFNRm94Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFO
      QmdOVkJBY01Ca3h2Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dP
      WTJFdVkyRnljbWxsY2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVRm
      ZmFwckZORy9SdnpDb21DUGs0YlcvVzlCTXpRK3FvN05MbHBSYXdiUFUwTE1zeTU5L3llSS9JZkt6
      YWVECllxb2VVK1FFVU5ZNmpjcXFGTmZ3dDRMcm8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9N
      QTRHQTFVZER3RUIKL3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVYTJndGk1NUZhVVJYUUV4dDUxdjN5
      aFZ2WERjd0NnWUlLb1pJemowRQpBd0lEUndBd1JBSWdQTzMzMEJyeGpWWHZGUVJJUGlpRE56ZEh2
      RlFPaHMvWS9QcDJhU0tEWGg0Q0lCUVdCK3hPCm1HVmRVR2FxOW5ERlZCY1AzQTFyY3NuckQ2S3E1
      UWkvbGt6bQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjcKC0VuZG9yc2VtZW50
      EigSHggBEhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zIjMKB1JlYWRlcnMSKBIe
      CAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiMwoHV3JpdGVycxIoEh4IARIa
      EggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyI0CgZBZG1pbnMSKhIgCAESHBIIEgYI
      ARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlucyoGQWRtaW5zGkAKFUNoYW5uZWxDcmVhdGlv
      blBvbGljeRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5l
      bC9PcmRlcmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAESBBICEgAaFy9DaGFubmVsL09yZGVyZXIv
      QWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxKXKwoHT3JkZXJlchKLKxLOFgoOc3VwcGx5
      Y2hhaW5NU1ASuxYaxxQKA01TUBK/FBK0FBKxFAoOc3VwcGx5Y2hhaW5NU1AS8QUtLS0tLUJFR0lO
      IENFUlRJRklDQVRFLS0tLS0KTUlJQi96Q0NBYWFnQXdJQkFnSVVKb3JqS0JpOG9QSlQrNmRsWEdW
      Q0tiZXYwdkV3Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFn
      TUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21W
      eU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qSXdOekUwTURN
      d09UVXdXaGNOTWpVd05UQXpNRE13T1RVd1dqQmVNUXN3Q1FZRFZRUUdFd0pIUWpFUApNQTBHQTFV
      RUNBd0dURzl1Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5
      ClpYSXhHekFaQmdOVkJBTU1FbU5oTG5OMWNIQnNlV05vWVdsdUxXNWxkREJaTUJNR0J5cUdTTTQ5
      QWdFR0NDcUcKU000OUF3RUhBMElBQkMzLy9DTGJEUEZjQ2puWjhtWTBXSForeHlkWm9Ub3lVQUtL
      TzR3QkVWeHE5SzZQeHppaQpSQTV4QlhzZ3NKemxnMFpMTHk4eVp3T24zZTZvT0NaM2dscWpRakJB
      TUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3CkRnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FX
      QkJSK3pSMkpTMGdJRWhJUXU3RDQyVzlyNU5nbm9EQUsKQmdncWhrak9QUVFEQWdOSEFEQkVBaUFF
      cjhieGJwbVZPQ29LZ1VBNTdkNWdCYzB1dTZVUkJBSWQwMGI5NUhqaQpRZ0lnSGVkejV0UVJIeE9n
      anpWdlgzYm9OWHpwU0lnL3J5QWlxaHZFUVVyMU9Bbz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0t
      LQoipggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQzRqQ0NBb2lnQXdJQkFnSVVhNFdq
      NWc2NW9vcFd1VUNZMGJQanlxMzdHVjB3Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1D
      UjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lE
      VlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlEVlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcK
      SGhjTk1qSXdOekUwTURNeE9EQXdXaGNOTWpNd056RTBNRE15TXpBd1dqQnNNUXN3Q1FZRFZRUUdF
      d0pIUWpFYgpNQmtHQTFVRUJ4TVNOVEV1TlRBdkxUQXVNVE12VEc5dVpHOXVNUkF3RGdZRFZRUUtF
      d2RQY21SbGNtVnlNUTR3CkRBWURWUVFMRXdWaFpHMXBiakVlTUJ3R0ExVUVBd3dWUVdSdGFXNUFj
      M1Z3Y0d4NVkyaGhhVzR0Ym1WME1Ga3cKRXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVQ
      NmxBM0JJdElTTlZ4ekxrNFcyS0hycnBETGl1MFV4RQpyRklJSVlJems2WnFjRjZjY0RGbXFZZkpX
      L3drSy9TREp1emNSaEtRZlRCNmppZWhmVUJac3FPQ0FSUXdnZ0VRCk1BNEdBMVVkRHdFQi93UUVB
      d0lIZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlFZY1lVN3IvN0wKOXBFUWMzcDdT
      TlJwY1N3VldqQWZCZ05WSFNNRUdEQVdnQlIrelIySlMwZ0lFaElRdTdENDJXOXI1Tmdub0RBawpC
      Z05WSFJFRUhUQWJnaGxqWVMxMGIyOXNjeTAxTmpZM1l6WTNabVkzTFRVM1luZDJNSUdKQmdncUF3
      UUZCZ2NJCkFRUjlleUpoZEhSeWN5STZleUpoWW1GakxtbHVhWFFpT2lKMGNuVmxJaXdpWVdSdGFX
      NGlPaUowY25WbElpd2kKYUdZdVFXWm1hV3hwWVhScGIyNGlPaUlpTENKb1ppNUZibkp2Ykd4dFpX
      NTBTVVFpT2lKQlpHMXBia0J6ZFhCdwpiSGxqYUdGcGJpMXVaWFFpTENKb1ppNVVlWEJsSWpvaVlX
      UnRhVzRpZlgwd0NnWUlLb1pJemowRUF3SURTQUF3ClJRSWhBTHBwcWludUk2MngwNHJkY3NyTFNE
      WldUbDZ6RUNVcWRyM042M0FXS1BLMkFpQk1rdzgvUVFEc3lLMzQKQnVzOVM1YVRhU1UwRGpULzdy
      ZG0zVFBpME03RUN3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hBMjU2
      SvEFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUIvekNDQWFhZ0F3SUJBZ0lVSm9yaktC
      aThvUEpUKzZkbFhHVkNLYmV2MHZFd0NnWUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1Iw
      SXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZR
      UUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3Ckho
      Y05Nakl3TnpFME1ETXdPVFV3V2hjTk1qVXdOVEF6TURNd09UVXdXakJlTVFzd0NRWURWUVFHRXdK
      SFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhEQVpNYjI1a2IyNHhFREFPQmdO
      VkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFjSEJzZVdOb1lXbHVMVzVsZERC
      Wk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJDMy8vQ0xiRFBGY0Nqblo4bVkwV0ha
      K3h5ZFpvVG95VUFLS080d0JFVnhxOUs2UHh6aWkKUkE1eEJYc2dzSnpsZzBaTEx5OHlad09uM2U2
      b09DWjNnbHFqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpEZ1lEVlIwUEFRSC9CQVFEQWdH
      bU1CMEdBMVVkRGdRV0JCUit6UjJKUzBnSUVoSVF1N0Q0Mlc5cjVOZ25vREFLCkJnZ3Foa2pPUFFR
      REFnTkhBREJFQWlBRXI4YnhicG1WT0NvS2dVQTU3ZDVnQmMwdXU2VVJCQUlkMDBiOTVIamkKUWdJ
      Z0hlZHo1dFFSSHhPZ2p6VnZYM2JvTlh6cFNJZy9yeUFpcWh2RVFVcjFPQW89Ci0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiOAoGQWRtaW5zEi4SJAgBEiASCBIGCAESAggAGhQSEgoO
      c3VwcGx5Y2hhaW5NU1AQARoGQWRtaW5zIjsKC0VuZG9yc2VtZW50EiwSIggBEh4SCBIGCAESAggA
      GhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyI3CgdSZWFkZXJzEiwSIggBEh4SCBIGCAESAggA
      GhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyI3CgdXcml0ZXJzEiwSIggBEh4SCBIGCAESAggA
      GhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlucyoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmljdGlv
      bnMSCBoGQWRtaW5zGiYKDENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8yEgAaBkFkbWlucxqKEgoN
      Q29uc2Vuc3VzVHlwZRL4ERLtEQoIZXRjZHJhZnQS4BEKyREKGG9yZGVyZXIxLnN1cHBseWNoYWlu
      LW5ldBCKNxrTCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQXpDQ0FxbWdBd0lCQWdJ
      VU1aRHVPRU1KWno1YTRnQzNjcUZmaHUyam40a3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFV
      RUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJB
      d0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1
      WlhRdwpIaGNOTWpJd056RTBNRE14T0RBd1doY05Nak13TnpFME1ETXlNekF3V2pCeE1Rc3dDUVlE
      VlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lE
      VlFRS0V3ZFBjbVJsY21WeU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2
      Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pP
      UFFNQkJ3TkNBQVFod0FtNXBBK2pIOHMrNTAzTkQ3NlU2a0tJCmU4cmZ5QmU3dXNBaDk5Um05NmQ3
      QytUYi9NemhCbmxvdFZEZkZDLzN6OHFkVUp2bkd3VDcxdllDNkhPS280SUIKTURDQ0FTd3dEZ1lE
      VlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNE
      QWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlM3ekoyZkRZNDc2QnZDWDVLSHlNUWdE
      SUpQCmpqQWZCZ05WSFNNRUdEQVdnQlIrelIySlMwZ0lFaElRdTdENDJXOXI1Tmdub0RBL0JnTlZI
      UkVFT0RBMmdoaHYKY21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NHbTl5WkdWeVpYSXhM
      bVJsZG1Wc2IzQXViRzlqWVd3dQpZMjl0TUd3R0NDb0RCQVVHQndnQkJHQjdJbUYwZEhKeklqcDdJ
      bWhtTGtGbVptbHNhV0YwYVc5dUlqb2lJaXdpCmFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmta
      WEpsY2pFdWMzVndjR3g1WTJoaGFXNHRibVYwSWl3aWFHWXUKVkhsd1pTSTZJbTl5WkdWeVpYSWlm
      WDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU9WeTdobkZZWjhya2lXdQpYZXkyWjJCWmIvMXdy
      N3kydjBnR2x0NC9BUk5xQWlCcE5nOU9rb2NaT04zQnIrQ29ZUHphdldYM1NDNWVyUEtSCklEbVRl
      WU9tYWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLTCC0tLS0tQkVHSU4gQ0VSVElGSUNB
      VEUtLS0tLQpNSUlEQXpDQ0FxbWdBd0lCQWdJVU1aRHVPRU1KWno1YTRnQzNjcUZmaHUyam40a3dD
      Z1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZi
      akVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURW
      UVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd056RTBNRE14T0RBd1doY05N
      ak13TnpFME1ETXlNekF3V2pCeE1Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05URXVO
      VEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1SQXcKRGdZRFZRUUxF
      d2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdQpa
      WFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFod0FtNXBBK2pIOHMrNTAzTkQ3
      NlU2a0tJCmU4cmZ5QmU3dXNBaDk5Um05NmQ3QytUYi9NemhCbmxvdFZEZkZDLzN6OHFkVUp2bkd3
      VDcxdllDNkhPS280SUIKTURDQ0FTd3dEZ1lEVlIwUEFRSC9CQVFEQWdPb01CMEdBMVVkSlFRV01C
      UUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERn
      UVdCQlM3ekoyZkRZNDc2QnZDWDVLSHlNUWdESUpQCmpqQWZCZ05WSFNNRUdEQVdnQlIrelIySlMw
      Z0lFaElRdTdENDJXOXI1Tmdub0RBL0JnTlZIUkVFT0RBMmdoaHYKY21SbGNtVnlNUzV6ZFhCd2JI
      bGphR0ZwYmkxdVpYU0NHbTl5WkdWeVpYSXhMbVJsZG1Wc2IzQXViRzlqWVd3dQpZMjl0TUd3R0ND
      b0RCQVVHQndnQkJHQjdJbUYwZEhKeklqcDdJbWhtTGtGbVptbHNhV0YwYVc5dUlqb2lJaXdpCmFH
      WXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmtaWEpsY2pFdWMzVndjR3g1WTJoaGFXNHRibVYwSWl3
      aWFHWXUKVkhsd1pTSTZJbTl5WkdWeVpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQU9W
      eTdobkZZWjhya2lXdQpYZXkyWjJCWmIvMXdyN3kydjBnR2x0NC9BUk5xQWlCcE5nOU9rb2NaT04z
      QnIrQ29ZUHphdldYM1NDNWVyUEtSCklEbVRlWU9tYWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0t
      LS0tChISCgU1MDBtcxAKGAEgBSiAgIAKGgZBZG1pbnMaIgoJQmF0Y2hTaXplEhUSCwgKEICAgDEY
      gIBAGgZBZG1pbnMaHgoMQmF0Y2hUaW1lb3V0Eg4SBAoCMnMaBkFkbWlucyIiCgZBZG1pbnMSGBIO
      CAMSCgoGQWRtaW5zEAIaBkFkbWlucyIqCg9CbG9ja1ZhbGlkYXRpb24SFxINCAMSCQoHV3JpdGVy
      cxoGQWRtaW5zIiIKB1JlYWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMS
      FxINCAMSCQoHV3JpdGVycxoGQWRtaW5zKgZBZG1pbnMaLQoZQmxvY2tEYXRhSGFzaGluZ1N0cnVj
      dHVyZRIQEgYI/////w8aBkFkbWlucxpOChBPcmRlcmVyQWRkcmVzc2VzEjoSHwodb3JkZXJlcjEu
      c3VwcGx5Y2hhaW4tbmV0OjcwNTAaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYKDENhcGFiaWxp
      dGllcxIWEgwKCgoGVjFfNF8zEgAaBkFkbWlucxomChBIYXNoaW5nQWxnb3JpdGhtEhISCAoGU0hB
      MjU2GgZBZG1pbnMiIgoGQWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMiIgoHUmVhZGVy
      cxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZB
      ZG1pbnMqBkFkbWlucxoKCgAKAAoACgAKAA==

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5
