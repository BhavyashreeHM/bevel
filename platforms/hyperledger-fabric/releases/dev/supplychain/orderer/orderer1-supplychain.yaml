apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/Mohitv/bevel.git
    ref: main
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:1.4.8
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.49.1:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIGKRIrjh3+Mpx6a+BB/2X7RoglxZPoECcVt3d3DpTF3CEqJeCp9eCpxeCngKWggBEAEaBgiy
      osSZBiIKc3lzY2hhbm5lbCpANjI5ODljMDY5ZTk0ODdlMDg2M2FhOGNjYTI4YWRmYWFiOWFhYjk5
      MmQ2YzdmZmIzNzM2ZjI4ZjE0NzA0ZjA2MRIaEhhypgVDDNBB1iloo27Axuf7rN0Sryzyin8Sn10K
      nF0SmV0SlysKB09yZGVyZXISiysS1hYKDnN1cHBseWNoYWluTVNQEsMWGs8UCgNNU1ASxxQSvBQS
      uRQKDnN1cHBseWNoYWluTVNQEvUFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBVEND
      QWFhZ0F3SUJBZ0lVRWJQUmNlVWtLNVIvMHVadTNGbEVadWZROUpNd0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05Nakl3T1RJMk1ESXlOREE1V2hjTk1qVXdOekUyTURJeU5EQTVX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJLZkl4
      TDBoRGZGS0dRN1o2MGRTeW5nS2RTWDUyV0M3L2JQVG9YYyt0aVJ5TU5ybjQ1b0QKOG1NS05UTUVN
      K3lET1MzSHZlTlQwREpZd0xwWVpSVHRhNEdqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCU29adzN5c3ovWGhoYk5yYUFLcFVveVND
      bGxsekFLCkJnZ3Foa2pPUFFRREFnTkpBREJHQWlFQTdZRmNBcGNyekdCQTZleXU3VFM1cVlvOEJN
      d0g4WElZZTRhWEliVDAKbmE0Q0lRQ1M0bHUyenBCdXlNRjlhZjZZQkxMblNiWnlaZW0wcUdLNld2
      VjRVVVNKZnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiKmCC0tLS0tQkVHSU4gQ0VSVElG
      SUNBVEUtLS0tLQpNSUlDNGpDQ0FvaWdBd0lCQWdJVU85R0k3VE5sQmlIcTFwT0svYi9wcmc2NGZo
      SXdDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJt
      UnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dR
      WURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd09USTJNREl6TWpBd1do
      Y05Nak13T1RJMk1ESXpOekF3V2pCc01Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dBMVVFQnhNU05U
      RXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1RNHcKREFZRFZR
      UUxFd1ZoWkcxcGJqRWVNQndHQTFVRUF3d1ZRV1J0YVc1QWMzVndjR3g1WTJoaGFXNHRibVYwTUZr
      dwpFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRWs1aWdlNUMvdTdGZHdXblBhYnlaWWRC
      QWJQdklINUV3CkxsRzY1cnViZUJvaWNtZ1EzbGRkbFViMm55TjZKaGNxV1dzb0RHMnJ1WEdLUjMz
      b1dSL0tMcU9DQVJRd2dnRVEKTUE0R0ExVWREd0VCL3dRRUF3SUhnREFNQmdOVkhSTUJBZjhFQWpB
      QU1CMEdBMVVkRGdRV0JCU2pTNlhYenYzYQpLM2dKbjZEa093d3ZrYmN2V1RBZkJnTlZIU01FR0RB
      V2dCU29adzN5c3ovWGhoYk5yYUFLcFVveVNDbGxsekFrCkJnTlZIUkVFSFRBYmdobGpZUzEwYjI5
      c2N5MDFOalkzWXpZM1ptWTNMWHBpTldoNE1JR0pCZ2dxQXdRRkJnY0kKQVFSOWV5SmhkSFJ5Y3lJ
      NmV5SmhZbUZqTG1sdWFYUWlPaUowY25WbElpd2lZV1J0YVc0aU9pSjBjblZsSWl3aQphR1l1UVda
      bWFXeHBZWFJwYjI0aU9pSWlMQ0pvWmk1RmJuSnZiR3h0Wlc1MFNVUWlPaUpCWkcxcGJrQnpkWEJ3
      CmJIbGphR0ZwYmkxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSUtvWkl6ajBF
      QXdJRFNBQXcKUlFJaEFQUFdSNXRTRGJOdlBmL1VGNjBOaVlQb2lHTEZzUUlSb0plU1QyNkQ5Y2VQ
      QWlBdVNXVitnb0N5TjByWQpNVFJkRmJLc3JTODQ4M2JaSzF6RHdPWGlON0xiWGc9PQotLS0tLUVO
      RCBDRVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK9QUtLS0tLUJFR0lOIENFUlRJRklD
      QVRFLS0tLS0KTUlJQ0FUQ0NBYWFnQXdJQkFnSVVFYlBSY2VVa0s1Ui8wdVp1M0ZsRVp1ZlE5Sk13
      Q2dZSUtvWkl6ajBFQXdJdwpYakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2
      YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZFBjbVJsY21WeU1Sc3dHUVlE
      VlFRRERCSmpZUzV6ZFhCd2JIbGphR0ZwYmkxdVpYUXcKSGhjTk1qSXdPVEkyTURJeU5EQTVXaGNO
      TWpVd056RTJNREl5TkRBNVdqQmVNUXN3Q1FZRFZRUUdFd0pIUWpFUApNQTBHQTFVRUNBd0dURzl1
      Wkc5dU1ROHdEUVlEVlFRSERBWk1iMjVrYjI0eEVEQU9CZ05WQkFvTUIwOXlaR1Z5ClpYSXhHekFa
      QmdOVkJBTU1FbU5oTG5OMWNIQnNlV05vWVdsdUxXNWxkREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUcK
      U000OUF3RUhBMElBQktmSXhMMGhEZkZLR1E3WjYwZFN5bmdLZFNYNTJXQzcvYlBUb1hjK3RpUnlN
      TnJuNDVvRAo4bU1LTlRNRU0reURPUzNIdmVOVDBESll3THBZWlJUdGE0R2pRakJBTUE4R0ExVWRF
      d0VCL3dRRk1BTUJBZjh3CkRnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJTb1p3M3lz
      ei9YaGhiTnJhQUtwVW95U0NsbGx6QUsKQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBN1lGY0FwY3J6
      R0JBNmV5dTdUUzVxWW84Qk13SDhYSVllNGFYSWJUMApuYTRDSVFDUzRsdTJ6cEJ1eU1GOWFmNllC
      TExuU2JaeVplbTBxR0s2V3ZWNFVVU0pmdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZB
      ZG1pbnMiNwoHV3JpdGVycxIsEiIIARIeEggSBggBEgIIABoSEhAKDnN1cHBseWNoYWluTVNQGgZB
      ZG1pbnMiOAoGQWRtaW5zEi4SJAgBEiASCBIGCAESAggAGhQSEgoOc3VwcGx5Y2hhaW5NU1AQARoG
      QWRtaW5zIjsKC0VuZG9yc2VtZW50EiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5N
      U1AaBkFkbWlucyI3CgdSZWFkZXJzEiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5N
      U1AaBkFkbWlucyoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmljdGlvbnMSCBoGQWRtaW5zGiYKDENh
      cGFiaWxpdGllcxIWEgwKCgoGVjFfNF8yEgAaBkFkbWlucxqCEgoNQ29uc2Vuc3VzVHlwZRLwERLl
      EQoIZXRjZHJhZnQS2BEKwREKGG9yZGVyZXIxLnN1cHBseWNoYWluLW5ldBCKNxrPCC0tLS0tQkVH
      SU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQWpDQ0FxbWdBd0lCQWdJVUMwdzJNK0tFOUlQLzJBRDN6
      dERseXhWT2R1c3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZC
      QWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxj
      bVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJd09USTJN
      REl6TWpBd1doY05Nak13T1RJMk1ESXpOekF3V2pCeE1Rc3dDUVlEVlFRR0V3SkhRakViCk1Ca0dB
      MVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21WeU1S
      QXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNUzV6ZFhCd2JI
      bGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVJzK1VybTEy
      SFIwQVpsQlhPSmgzemsvMldJCmwycjNVa3VsMzdzQ2h5R2NLSUdpNDgzKzR3WWkvaHlEUU1INnRM
      bDJpMjFreTlEWEtNUnhiV0ZqM2k0K280SUIKTURDQ0FTd3dEZ1lEVlIwUEFRSC9CQVFEQWdPb01C
      MEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4RUFq
      QUFNQjBHQTFVZERnUVdCQlRXUG53SFJ0dDYwbUk1L041Ly9tZG91UWZoClh6QWZCZ05WSFNNRUdE
      QVdnQlNvWnczeXN6L1hoaGJOcmFBS3BVb3lTQ2xsbHpBL0JnTlZIUkVFT0RBMmdoaHYKY21SbGNt
      VnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NHbTl5WkdWeVpYSXhMbVJsZG1Wc2IzQXViRzlqWVd3
      dQpZMjl0TUd3R0NDb0RCQVVHQndnQkJHQjdJbUYwZEhKeklqcDdJbWhtTGtGbVptbHNhV0YwYVc5
      dUlqb2lJaXdpCmFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmtaWEpsY2pFdWMzVndjR3g1WTJo
      aGFXNHRibVYwSWl3aWFHWXUKVkhsd1pTSTZJbTl5WkdWeVpYSWlmWDB3Q2dZSUtvWkl6ajBFQXdJ
      RFJ3QXdSQUlnSzl3T3BJV096dEJMYi9RZAptZGRKS0JPdHpwd3Fob3NsUGM3UFNwV0psU29DSUNI
      bW5wTEZTVzQyRjdZUWwzR2pRVVcwZFdrdzB6elFISEdMCmdTVTY0Q011Ci0tLS0tRU5EIENFUlRJ
      RklDQVRFLS0tLS0KIs8ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBakNDQXFtZ0F3
      SUJBZ0lVQzB3Mk0rS0U5SVAvMkFEM3p0RGx5eFZPZHVzd0NnWUlLb1pJemowRUF3SXcKWGpFTE1B
      a0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5
      dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxqYUdG
      cGJpMXVaWFF3CkhoY05Nakl3T1RJMk1ESXpNakF3V2hjTk1qTXdPVEkyTURJek56QXdXakJ4TVFz
      d0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1TVRNdlRHOXVaRzl1TVJB
      d0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJsY21WeU1TRXdId1lEVlFR
      REV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFUQmdjcWhrak9QUUlCQmdn
      cWhrak9QUU1CQndOQ0FBUnMrVXJtMTJIUjBBWmxCWE9KaDN6ay8yV0kKbDJyM1VrdWwzN3NDaHlH
      Y0tJR2k0ODMrNHdZaS9oeURRTUg2dExsMmkyMWt5OURYS01SeGJXRmozaTQrbzRJQgpNRENDQVN3
      d0RnWURWUjBQQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VG
      CkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVFdQbndIUnR0NjBtSTUvTjUv
      L21kb3VRZmgKWHpBZkJnTlZIU01FR0RBV2dCU29adzN5c3ovWGhoYk5yYUFLcFVveVNDbGxsekEv
      QmdOVkhSRUVPREEyZ2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhTQ0dtOXlaR1Z5
      WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1ClkyOXRNR3dHQ0NvREJBVUdCd2dCQkdCN0ltRjBkSEp6
      SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2kKYUdZdVJXNXliMnhzYldWdWRFbEVJam9p
      YjNKa1pYSmxjakV1YzNWd2NHeDVZMmhoYVc0dGJtVjBJaXdpYUdZdQpWSGx3WlNJNkltOXlaR1Z5
      WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdLOXdPcElXT3p0QkxiL1FkCm1kZEpLQk90
      enB3cWhvc2xQYzdQU3BXSmxTb0NJQ0htbnBMRlNXNDJGN1lRbDNHalFVVzBkV2t3MHp6UUhIR0wK
      Z1NVNjRDTXUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgBIAUogICAChoG
      QWRtaW5zGiIKCUJhdGNoU2l6ZRIVEgsIChCAgIAxGICAQBoGQWRtaW5zGh4KDEJhdGNoVGltZW91
      dBIOEgQKAjJzGgZBZG1pbnMiIgoHV3JpdGVycxIXEg0IAxIJCgdXcml0ZXJzGgZBZG1pbnMiIgoG
      QWRtaW5zEhgSDggDEgoKBkFkbWlucxACGgZBZG1pbnMiKgoPQmxvY2tWYWxpZGF0aW9uEhcSDQgD
      EgkKB1dyaXRlcnMaBkFkbWlucyIiCgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyoG
      QWRtaW5zErkvCgtDb25zb3J0aXVtcxKpLxLeLgoVU3VwcGx5Q2hhaW5Db25zb3J0aXVtEsQuErEX
      Cg9tYW51ZmFjdHVyZXJNU1ASnRcapRUKA01TUBKdFRKSFRKPFQoPbWFudWZhY3R1cmVyTVNQEoEG
      LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNDekNDQWJLZ0F3SUJBZ0lVVzZEOENoVU9z
      aTZzTUhxQ2gwbE9VN2FFbDg0d0NnWUlLb1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hE
      ekFOQmdOVkJBZ01CbHAxY21samFERVBNQTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtE
      QXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFCZ05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVa
      WFF3SGhjTk1qSXdPVEkyTURJeU5qRXhXaGNOTWpVd056RTJNREl5TmpFeFdqQmtNUXN3Q1FZRFZR
      UUcKRXdKRFNERVBNQTBHQTFVRUNBd0dXblZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZU
      QVRCZ05WQkFvTQpERTFoYm5WbVlXTjBkWEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkz
      UjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSDdOVEJNQzh3
      dVp4azJhdG1PZzVRa0RaRUkwajJDa3djd1oKYUcyRjJQd1R6bjJ4UkJwa3pURHpPV0F3OXo4ODJS
      WFZqRE1MRGZSZzdOQ2lzVmNseW9palFqQkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZS
      MFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlNPbWpvREhMMXorUjB0CktwTmZCU3kyUTA5S2hq
      QUtCZ2dxaGtqT1BRUURBZ05IQURCRUFpQTl5Nk1CRUNzbjFSVUZxd2N5N3g3Q3lOdzUKODlhS1FB
      U2c3b2NaT21ldHB3SWdJNURMMW9KYWpXdDFDOFY5YURxcVlGbjFtQ2dBWTJjSEZrQlhCaWwya2g4
      PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiLjCC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0t
      LQpNSUlERURDQ0FyZWdBd0lCQWdJVWFaZXhuZDJPazBpUzhaeVNaN2xjK3g5cDFLVXdDZ1lJS29a
      SXpqMEVBd0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEw
      R0ExVUVCd3dHV25WeWFXTm8KTVJVd0V3WURWUVFLREF4TllXNTFabUZqZEhWeVpYSXhIREFhQmdO
      VkJBTU1FMk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1WlhRd0hoY05Nakl3T1RJMk1ESXpNekF3V2hj
      Tk1qTXdPVEkyTURJek9EQXdXakNCaGpFTE1Ba0dBMVVFCkJoTUNRMGd4R2pBWUJnTlZCQWNURVRR
      M0xqTTRMemd1TlRRdlduVnlhV05vTVJVd0V3WURWUVFLRXd4TllXNTEKWm1GamRIVnlaWEl4SXpB
      TUJnTlZCQXNUQldGa2JXbHVNQk1HQTFVRUN4TU1iV0Z1ZFdaaFkzUjFjbVZ5TVI4dwpIUVlEVlFR
      RERCWkJaRzFwYmtCdFlXNTFabUZqZEhWeVpYSXRibVYwTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJ
      CnpqMERBUWNEUWdBRURBWXdLWDVEWkJDT3RDQXBibjhELzdFYVdPSWlDemtkeEZWS3Y0MGJiRVJI
      SWFEUEJFazgKMEZyM3NNTGVXSy9ScUtZOVIwT0JDUmc2ekg0K3g2aURFYU9DQVNJd2dnRWVNQTRH
      QTFVZER3RUIvd1FFQXdJSApnREFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUllVRnhD
      R2VqRE5hMlhRcXJaZzAwOEs1ZjJmakFmCkJnTlZIU01FR0RBV2dCU09tam9ESEwxeitSMHRLcE5m
      QlN5MlEwOUtoakFrQmdOVkhSRUVIVEFiZ2hsallTMTAKYjI5c2N5MDNZMlEzWm1SbU9UYzJMWEoz
      Wkc1Mk1JR1hCZ2dxQXdRRkJnY0lBUVNCaW5zaVlYUjBjbk1pT25zaQpZV0poWXk1cGJtbDBJam9p
      ZEhKMVpTSXNJbUZrYldsdUlqb2lkSEoxWlNJc0ltaG1Ma0ZtWm1sc2FXRjBhVzl1Cklqb2liV0Z1
      ZFdaaFkzUjFjbVZ5SWl3aWFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaVFXUnRhVzVBYldGdWRXWmgK
      WTNSMWNtVnlMVzVsZENJc0ltaG1MbFI1Y0dVaU9pSmhaRzFwYmlKOWZUQUtCZ2dxaGtqT1BRUURB
      Z05IQURCRQpBaUFQL09sN0xPVVJLTCtWZmJKY2dVcFE2OTJXRjZIZ25XWEx3Y1VaWklIRGxBSWdZ
      cmhnKzNRTXZtK1BLR0M1Clh3SmlrRVdmeUNOM0dhM2ttVUpnMG1GUHZWST0KLS0tLS1FTkQgQ0VS
      VElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hBMjU2SoEGLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0t
      LS0tCk1JSUNDekNDQWJLZ0F3SUJBZ0lVVzZEOENoVU9zaTZzTUhxQ2gwbE9VN2FFbDg0d0NnWUlL
      b1pJemowRUF3SXcKWkRFTE1Ba0dBMVVFQmhNQ1EwZ3hEekFOQmdOVkJBZ01CbHAxY21samFERVBN
      QTBHQTFVRUJ3d0dXblZ5YVdObwpNUlV3RXdZRFZRUUtEQXhOWVc1MVptRmpkSFZ5WlhJeEhEQWFC
      Z05WQkFNTUUyTmhMbTFoYm5WbVlXTjBkWEpsCmNpMXVaWFF3SGhjTk1qSXdPVEkyTURJeU5qRXhX
      aGNOTWpVd056RTJNREl5TmpFeFdqQmtNUXN3Q1FZRFZRUUcKRXdKRFNERVBNQTBHQTFVRUNBd0dX
      blZ5YVdOb01ROHdEUVlEVlFRSERBWmFkWEpwWTJneEZUQVRCZ05WQkFvTQpERTFoYm5WbVlXTjBk
      WEpsY2pFY01Cb0dBMVVFQXd3VFkyRXViV0Z1ZFdaaFkzUjFjbVZ5TFc1bGREQlpNQk1HCkJ5cUdT
      TTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCSDdOVEJNQzh3dVp4azJhdG1PZzVRa0RaRUkwajJDa3dj
      d1oKYUcyRjJQd1R6bjJ4UkJwa3pURHpPV0F3OXo4ODJSWFZqRE1MRGZSZzdOQ2lzVmNseW9palFq
      QkFNQThHQTFVZApFd0VCL3dRRk1BTUJBZjh3RGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERn
      UVdCQlNPbWpvREhMMXorUjB0CktwTmZCU3kyUTA5S2hqQUtCZ2dxaGtqT1BRUURBZ05IQURCRUFp
      QTl5Nk1CRUNzbjFSVUZxd2N5N3g3Q3lOdzUKODlhS1FBU2c3b2NaT21ldHB3SWdJNURMMW9KYWpX
      dDFDOFY5YURxcVlGbjFtQ2dBWTJjSEZrQlhCaWwya2g4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0t
      LS0tChoGQWRtaW5zIjgKB1dyaXRlcnMSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVy
      ZXJNU1AaBkFkbWlucyI5CgZBZG1pbnMSLxIlCAESIRIIEgYIARICCAAaFRITCg9tYW51ZmFjdHVy
      ZXJNU1AQARoGQWRtaW5zIjwKC0VuZG9yc2VtZW50Ei0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFu
      dWZhY3R1cmVyTVNQGgZBZG1pbnMiOAoHUmVhZGVycxItEiMIARIfEggSBggBEgIIABoTEhEKD21h
      bnVmYWN0dXJlck1TUBoGQWRtaW5zKgZBZG1pbnMSshYKCmNhcnJpZXJNU1ASoxYavxQKA01TUBK3
      FBKsFBKpFAoKY2Fycmllck1TUBLpBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlCK1RD
      Q0FaNmdBd0lCQWdJVVU0aXJYSDJyMnQ2UGQwZXdlQ3VYVGt6akVRZ3dDZ1lJS29aSXpqMEVBd0l3
      CldqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dH
      VEc5dVpHOXUKTVJBd0RnWURWUVFLREFkRFlYSnlhV1Z5TVJjd0ZRWURWUVFEREE1allTNWpZWEp5
      YVdWeUxXNWxkREFlRncweQpNakE1TWpZd01qSTRNVFJhRncweU5UQTNNVFl3TWpJNE1UUmFNRm94
      Q3pBSkJnTlZCQVlUQWtkQ01ROHdEUVlEClZRUUlEQVpNYjI1a2IyNHhEekFOQmdOVkJBY01Ca3h2
      Ym1SdmJqRVFNQTRHQTFVRUNnd0hRMkZ5Y21sbGNqRVgKTUJVR0ExVUVBd3dPWTJFdVkyRnljbWxs
      Y2kxdVpYUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQwpBQVNwVHlPbXAyTkxxZUlE
      c201Vm5ScnVUTk5UNFUzZmY4bGE5cDcyQ24xM0NjZmFZQy9FL3FHMFB3Y3NBOFpWCnpNaVZudjNz
      Mnhjem9TYUF5NmFwS3RmMm8wSXdRREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTRHQTFVZER3RUIK
      L3dRRUF3SUJwakFkQmdOVkhRNEVGZ1FVV0IrVTBLcEg1RExCcTkxeFNiWkF5SFhuZlNJd0NnWUlL
      b1pJemowRQpBd0lEU1FBd1JnSWhBUEE3VGFmMC9OcWpYZk82SHlLTGIzSkpVKy9FdU13Q0NkSnZj
      OUMydlNmNUFpRUF3K2Z4CnpDZEFxV21aaVVVWE16TzJXMmRQaWcrOUdzNEZlblhwTC9pZ01zVT0K
      LS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoisggtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0K
      TUlJQzdUQ0NBcFNnQXdJQkFnSVVXNGZkYXpwRktZcExpd3lEMTZHcVdjMGRtYWt3Q2dZSUtvWkl6
      ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdB
      MVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZ
      UzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTWpBNU1qWXdNak0xTURCYUZ3MHlNekE1TWpZd01qUXdN
      REJhTUhneEN6QUpCZ05WQkFZVEFrZENNUnN3R1FZRApWUVFIRXhJMU1TNDFNQzh0TUM0eE15OU1i
      MjVrYjI0eEVEQU9CZ05WQkFvVEIwTmhjbkpwWlhJeEhqQU1CZ05WCkJBc1RCV0ZrYldsdU1BNEdB
      MVVFQ3hNSFkyRnljbWxsY2pFYU1CZ0dBMVVFQXd3UlFXUnRhVzVBWTJGeWNtbGwKY2kxdVpYUXdX
      VEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBUVI3T1NYbTFxQmtEWUtrT0xhZmZwRAo4
      MFNXdFp2UzloSkh3UnQ0SWo0NWNhcCt0cVFrM1ZqZ1BBOFNrdFRET0VpNWladTBwbkdVZXdUTXFO
      TVhNZk04Cm80SUJHRENDQVJRd0RnWURWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01B
      QXdIUVlEVlIwT0JCWUUKRkI0Q2tPeWZtOTlqeERibWtLTVJBNVZUY0d2T01COEdBMVVkSXdRWU1C
      YUFGRmdmbE5DcVIrUXl3YXZkY1VtMgpRTWgxNTMwaU1DUUdBMVVkRVFRZE1CdUNHV05oTFhSdmIy
      eHpMVFprTkdNMlpqYzJaR1l0Wm1vMGFqWXdnWTBHCkNDb0RCQVVHQndnQkJJR0FleUpoZEhSeWN5
      STZleUpoWW1GakxtbHVhWFFpT2lKMGNuVmxJaXdpWVdSdGFXNGkKT2lKMGNuVmxJaXdpYUdZdVFX
      Wm1hV3hwWVhScGIyNGlPaUpqWVhKeWFXVnlJaXdpYUdZdVJXNXliMnhzYldWdQpkRWxFSWpvaVFX
      UnRhVzVBWTJGeWNtbGxjaTF1WlhRaUxDSm9aaTVVZVhCbElqb2lZV1J0YVc0aWZYMHdDZ1lJCktv
      Wkl6ajBFQXdJRFJ3QXdSQUlnSUhqU1hVWi9wUWk1b1hkSmlDSGFmL3ZHakxKbHRoWFl4Tm9Bd2Nk
      b2NWOEMKSUFsVWhpSGNQME04Yy9JTlhmL3ZRNTcyb09YeE9pTjFXWmpKdm55VWoxd2sKLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQpCDgoEU0hBMhIGU0hBMjU2SukFLS0tLS1CRUdJTiBDRVJUSUZJ
      Q0FURS0tLS0tCk1JSUIrVENDQVo2Z0F3SUJBZ0lVVTRpclhIMnIydDZQZDBld2VDdVhUa3pqRVFn
      d0NnWUlLb1pJemowRUF3SXcKV2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1S
      dmJqRVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZ
      RFZRUUREQTVqWVM1allYSnlhV1Z5TFc1bGREQWVGdzB5Ck1qQTVNall3TWpJNE1UUmFGdzB5TlRB
      M01UWXdNakk0TVRSYU1Gb3hDekFKQmdOVkJBWVRBa2RDTVE4d0RRWUQKVlFRSURBWk1iMjVrYjI0
      eER6QU5CZ05WQkFjTUJreHZibVJ2YmpFUU1BNEdBMVVFQ2d3SFEyRnljbWxsY2pFWApNQlVHQTFV
      RUF3d09ZMkV1WTJGeWNtbGxjaTF1WlhRd1dUQVRCZ2NxaGtqT1BRSUJCZ2dxaGtqT1BRTUJCd05D
      CkFBU3BUeU9tcDJOTHFlSURzbTVWblJydVROTlQ0VTNmZjhsYTlwNzJDbjEzQ2NmYVlDL0UvcUcw
      UHdjc0E4WlYKek1pVm52M3MyeGN6b1NhQXk2YXBLdGYybzBJd1FEQVBCZ05WSFJNQkFmOEVCVEFE
      QVFIL01BNEdBMVVkRHdFQgovd1FFQXdJQnBqQWRCZ05WSFE0RUZnUVVXQitVMEtwSDVETEJxOTF4
      U2JaQXlIWG5mU0l3Q2dZSUtvWkl6ajBFCkF3SURTUUF3UmdJaEFQQTdUYWYwL05xalhmTzZIeUtM
      YjNKSlUrL0V1TXdDQ2RKdmM5QzJ2U2Y1QWlFQXcrZngKekNkQXFXbVppVVVYTXpPMlcyZFBpZys5
      R3M0RmVuWHBML2lnTXNVPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjMKB1dy
      aXRlcnMSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiNAoGQWRtaW5z
      EioSIAgBEhwSCBIGCAESAggAGhASDgoKY2Fycmllck1TUBABGgZBZG1pbnMiNwoLRW5kb3JzZW1l
      bnQSKBIeCAESGhIIEgYIARICCAAaDhIMCgpjYXJyaWVyTVNQGgZBZG1pbnMiMwoHUmVhZGVycxIo
      Eh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyoGQWRtaW5zGkAKFUNoYW5u
      ZWxDcmVhdGlvblBvbGljeRInEgwIAxIICgZBZG1pbnMaFy9DaGFubmVsL09yZGVyZXIvQWRtaW5z
      KhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucyItCgZBZG1pbnMSIxIICAESBBICEgAaFy9DaGFubmVs
      L09yZGVyZXIvQWRtaW5zKhcvQ2hhbm5lbC9PcmRlcmVyL0FkbWlucxomCgxDYXBhYmlsaXRpZXMS
      FhIMCgoKBlYxXzRfMxIAGgZBZG1pbnMaJgoQSGFzaGluZ0FsZ29yaXRobRISEggKBlNIQTI1NhoG
      QWRtaW5zGi0KGUJsb2NrRGF0YUhhc2hpbmdTdHJ1Y3R1cmUSEBIGCP////8PGgZBZG1pbnMaTgoQ
      T3JkZXJlckFkZHJlc3NlcxI6Eh8KHW9yZGVyZXIxLnN1cHBseWNoYWluLW5ldDo3MDUwGhcvQ2hh
      bm5lbC9PcmRlcmVyL0FkbWlucyIiCgZBZG1pbnMSGBIOCAMSCgoGQWRtaW5zEAIaBkFkbWlucyIi
      CgdSZWFkZXJzEhcSDQgDEgkKB1JlYWRlcnMaBkFkbWlucyIiCgdXcml0ZXJzEhcSDQgDEgkKB1dy
      aXRlcnMaBkFkbWlucyoGQWRtaW5zGgoKAAoACgAKAAoA

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5     
