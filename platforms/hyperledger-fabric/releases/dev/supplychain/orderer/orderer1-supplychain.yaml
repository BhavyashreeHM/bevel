apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: supplychain-orderer1
  namespace: supplychain-net
  annotations:
    fluxcd.io/automated: "false"
spec:
  releaseName: supplychain-orderer1
  chart:
    git: https://github.com/Mohitv/bevel.git
    ref: main
    path: platforms/hyperledger-fabric/charts/orderernode
  values:
    metadata:
      namespace: supplychain-net
      images:
        orderer: hyperledger/fabric-orderer:2.2.2
        alpineutils: index.docker.io/hyperledgerlabs/alpine-utils:1.0
    annotations:  
      service:
        - example1: example2
      pvc:
      deployment:
    orderer:
      name: orderer1
      loglevel: info
      localmspid: supplychainMSP
      tlsstatus: true
      keepaliveserverinterval: 10s
    
    consensus:
      name: raft

    storage:
      storageclassname: supplychainsc
      storagesize: 512Mi  

    service:
      servicetype: ClusterIP
      ports:
        grpc:
          clusteripport: 7050

    vault:
      address: http://192.168.49.1:8200
      role: vault-role
      authpath: localsupplychain-net-auth
      secretprefix: secretsv2/data/crypto/ordererOrganizations/supplychain-net/orderers/orderer1.supplychain-net
      imagesecretname: regcred
      serviceaccountname: vault-auth

    proxy:
      provider: none
      external_url_suffix: develop.local.com

    genesis: |-
      CiIaIMrzmVROJ+KNXwWHnfKQoOo3ZvbO7uLodECVOaTSwPZFEp5eCpteCpheCngKWggBEAEaBgiP
      zYSaBiIKc3lzY2hhbm5lbCpAOTRjNjQ1OGU4YzM4YzAxZjBhMjMzNTNlNzkxY2FkNDM0OWJiMGRh
      NmRjNGI5MTQwNGMzODBkMGJiNzFjNGFmNhIaEhgw/AkXnRac0M87PixECb5AE0wuxOLs4/kSm10K
      mF0SlV0SjysKB09yZGVyZXISgysSzhYKDnN1cHBseWNoYWluTVNQErsWGscUCgNNU1ASvxQStBQS
      sRQKDnN1cHBseWNoYWluTVNQEvEFLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNBREND
      QWFhZ0F3SUJBZ0lVUDhNTHJWSlRSRGx6TU1ReE83bEFqRExoK1d3d0NnWUlLb1pJemowRUF3SXcK
      WGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndi
      SGxqYUdGcGJpMXVaWFF3CkhoY05Nakl4TURBNE1EY3hNVFF5V2hjTk1qVXdOekk0TURjeE1UUXlX
      akJlTVFzd0NRWURWUVFHRXdKSFFqRVAKTUEwR0ExVUVDQXdHVEc5dVpHOXVNUTh3RFFZRFZRUUhE
      QVpNYjI1a2IyNHhFREFPQmdOVkJBb01CMDl5WkdWeQpaWEl4R3pBWkJnTlZCQU1NRW1OaExuTjFj
      SEJzZVdOb1lXbHVMVzVsZERCWk1CTUdCeXFHU000OUFnRUdDQ3FHClNNNDlBd0VIQTBJQUJFK0Vv
      WERWMG5rcERxTjlxWnU5ejZMSUgwR3hnTGdVTEZtUFpUZlNCNHFmVm92Zlk2OTAKWUxheklNaG5h
      ZDdCQ2psaVR5bHg1bkkxajRoOTB4ZndoQ1dqUWpCQU1BOEdBMVVkRXdFQi93UUZNQU1CQWY4dwpE
      Z1lEVlIwUEFRSC9CQVFEQWdHbU1CMEdBMVVkRGdRV0JCU1E1amQ4QnlMSW1LTnFKREhuTFdiRVND
      R0g1ekFLCkJnZ3Foa2pPUFFRREFnTklBREJGQWlFQXBoQzZmM2ZXYzVHUStTYUpXRkhhditlblNk
      K0tiUjlpV1JtU2hWSXUKVmFRQ0lEM2FpTERXd3BrMlVlaDRBS01tSzV2cWJVSlRqb2tZTk9Uc1NN
      UDF3K0hjCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KIqYILS0tLS1CRUdJTiBDRVJUSUZJQ0FU
      RS0tLS0tCk1JSUM0akNDQW9pZ0F3SUJBZ0lVS01GanV3SmFscW1iZzNwdWdybENDU2RsTjBFd0Nn
      WUlLb1pJemowRUF3SXcKWGpFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJq
      RVBNQTBHQTFVRUJ3d0dURzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZR
      UUREQkpqWVM1emRYQndiSGxqYUdGcGJpMXVaWFF3CkhoY05Nakl4TURBNE1EY3hPVEF3V2hjTk1q
      TXhNREE0TURjeU5EQXdXakJzTVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5U
      QXZMVEF1TVRNdlRHOXVaRzl1TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVE0dwpEQVlEVlFRTEV3
      VmhaRzFwYmpFZU1Cd0dBMVVFQXd3VlFXUnRhVzVBYzNWd2NHeDVZMmhoYVc0dGJtVjBNRmt3CkV3
      WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFV2RmQXdORlFkYVJ6aUlOcmJVdXJ0Zk4ycjNL
      UXdBeUEKNU8xTlc1UTNwb3dGbzIxdUlGME5XWjBmSFl6TCtTY05ES1JIUkNxd1NNb0RpQXpkMXZC
      UU42T0NBUlF3Z2dFUQpNQTRHQTFVZER3RUIvd1FFQXdJSGdEQU1CZ05WSFJNQkFmOEVBakFBTUIw
      R0ExVWREZ1FXQkJTNmxMeGMvTldwCm9NaGZ4Tkc1WWtDazNOWXZYakFmQmdOVkhTTUVHREFXZ0JT
      UTVqZDhCeUxJbUtOcUpESG5MV2JFU0NHSDV6QWsKQmdOVkhSRUVIVEFiZ2hsallTMTBiMjlzY3kw
      MU5qWTNZelkzWm1ZM0xUaGpabXR0TUlHSkJnZ3FBd1FGQmdjSQpBUVI5ZXlKaGRIUnljeUk2ZXlK
      aFltRmpMbWx1YVhRaU9pSjBjblZsSWl3aVlXUnRhVzRpT2lKMGNuVmxJaXdpCmFHWXVRV1ptYVd4
      cFlYUnBiMjRpT2lJaUxDSm9aaTVGYm5KdmJHeHRaVzUwU1VRaU9pSkJaRzFwYmtCemRYQncKYkhs
      amFHRnBiaTF1WlhRaUxDSm9aaTVVZVhCbElqb2lZV1J0YVc0aWZYMHdDZ1lJS29aSXpqMEVBd0lE
      U0FBdwpSUUloQU9rU1IvOXg0N2Y5UVJoa3hsYW1qZWhQazBoUnpnYjIxWXJ6SDZFdXBuN0dBaUFZ
      UHR6VUNmUWFBUDBvClZ5Y24yZUFlalVSa29IN3lFK3J3TFJCRDJlUmhGdz09Ci0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KQg4KBFNIQTISBlNIQTI1NkrxBS0tLS0tQkVHSU4gQ0VSVElGSUNBVEUt
      LS0tLQpNSUlDQURDQ0FhYWdBd0lCQWdJVVA4TUxyVkpUUkRsek1NUXhPN2xBakRMaCtXd3dDZ1lJ
      S29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJnTlZCQWdNQmt4dmJtUnZiakVQ
      TUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNtUmxjbVZ5TVJzd0dRWURWUVFE
      REJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1EQTRNRGN4TVRReVdoY05NalV3
      TnpJNE1EY3hNVFF5V2pCZU1Rc3dDUVlEVlFRR0V3SkhRakVQCk1BMEdBMVVFQ0F3R1RHOXVaRzl1
      TVE4d0RRWURWUVFIREFaTWIyNWtiMjR4RURBT0JnTlZCQW9NQjA5eVpHVnkKWlhJeEd6QVpCZ05W
      QkFNTUVtTmhMbk4xY0hCc2VXTm9ZV2x1TFc1bGREQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5
      QXdFSEEwSUFCRStFb1hEVjBua3BEcU45cVp1OXo2TElIMEd4Z0xnVUxGbVBaVGZTQjRxZlZvdmZZ
      NjkwCllMYXpJTWhuYWQ3QkNqbGlUeWx4NW5JMWo0aDkweGZ3aENXalFqQkFNQThHQTFVZEV3RUIv
      d1FGTUFNQkFmOHcKRGdZRFZSMFBBUUgvQkFRREFnR21NQjBHQTFVZERnUVdCQlNRNWpkOEJ5TElt
      S05xSkRIbkxXYkVTQ0dINXpBSwpCZ2dxaGtqT1BRUURBZ05JQURCRkFpRUFwaEM2ZjNmV2M1R1Er
      U2FKV0ZIYXYrZW5TZCtLYlI5aVdSbVNoVkl1ClZhUUNJRDNhaUxEV3dwazJVZWg0QUtNbUs1dnFi
      VUpUam9rWU5PVHNTTVAxdytIYwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tChoGQWRtaW5zIjsK
      C0VuZG9yc2VtZW50EiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlu
      cyI3CgdSZWFkZXJzEiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlu
      cyI3CgdXcml0ZXJzEiwSIggBEh4SCBIGCAESAggAGhISEAoOc3VwcGx5Y2hhaW5NU1AaBkFkbWlu
      cyI4CgZBZG1pbnMSLhIkCAESIBIIEgYIARICCAAaFBISCg5zdXBwbHljaGFpbk1TUBABGgZBZG1p
      bnMqBkFkbWlucxoiCglCYXRjaFNpemUSFRILCAoQgICAMRiAgEAaBkFkbWlucxoeCgxCYXRjaFRp
      bWVvdXQSDhIECgIycxoGQWRtaW5zGh8KE0NoYW5uZWxSZXN0cmljdGlvbnMSCBoGQWRtaW5zGiYK
      DENhcGFiaWxpdGllcxIWEgwKCgoGVjFfNF8yEgAaBkFkbWlucxqCEgoNQ29uc2Vuc3VzVHlwZRLw
      ERLlEQoIZXRjZHJhZnQS2BEKwREKGG9yZGVyZXIxLnN1cHBseWNoYWluLW5ldBCKNxrPCC0tLS0t
      QkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQWpDQ0FxbWdBd0lCQWdJVUJ6eEN6clA4RnQxdSta
      ZTN2WVMvc3ZReUVHa3dDZ1lJS29aSXpqMEVBd0l3ClhqRUxNQWtHQTFVRUJoTUNSMEl4RHpBTkJn
      TlZCQWdNQmt4dmJtUnZiakVQTUEwR0ExVUVCd3dHVEc5dVpHOXUKTVJBd0RnWURWUVFLREFkUGNt
      UmxjbVZ5TVJzd0dRWURWUVFEREJKallTNXpkWEJ3YkhsamFHRnBiaTF1WlhRdwpIaGNOTWpJeE1E
      QTRNRGN4T1RBd1doY05Nak14TURBNE1EY3lOREF3V2pCeE1Rc3dDUVlEVlFRR0V3SkhRakViCk1C
      a0dBMVVFQnhNU05URXVOVEF2TFRBdU1UTXZURzl1Wkc5dU1SQXdEZ1lEVlFRS0V3ZFBjbVJsY21W
      eU1SQXcKRGdZRFZRUUxFd2R2Y21SbGNtVnlNU0V3SHdZRFZRUURFeGh2Y21SbGNtVnlNUzV6ZFhC
      d2JIbGphR0ZwYmkxdQpaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVFZOTJN
      OEFodWJ1djNVd3g0a3BlbFBLVkYvCmIxRmxVdVVSdDlLcFNHQzZ5YWRham9ycndmRzBvWkNFMVNw
      bnRrUUMvYUVGYmxlbW91c3hDVGRNcklUOG80SUIKTURDQ0FTd3dEZ1lEVlIwUEFRSC9CQVFEQWdP
      b01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRgpCUWNEQWpBTUJnTlZIUk1CQWY4
      RUFqQUFNQjBHQTFVZERnUVdCQlREY3J5SWRsRDJXbklCZHlleEtNdGs5UlRxCmxqQWZCZ05WSFNN
      RUdEQVdnQlNRNWpkOEJ5TEltS05xSkRIbkxXYkVTQ0dINXpBL0JnTlZIUkVFT0RBMmdoaHYKY21S
      bGNtVnlNUzV6ZFhCd2JIbGphR0ZwYmkxdVpYU0NHbTl5WkdWeVpYSXhMbVJsZG1Wc2IzQXViRzlq
      WVd3dQpZMjl0TUd3R0NDb0RCQVVHQndnQkJHQjdJbUYwZEhKeklqcDdJbWhtTGtGbVptbHNhV0Yw
      YVc5dUlqb2lJaXdpCmFHWXVSVzV5YjJ4c2JXVnVkRWxFSWpvaWIzSmtaWEpsY2pFdWMzVndjR3g1
      WTJoaGFXNHRibVYwSWl3aWFHWXUKVkhsd1pTSTZJbTl5WkdWeVpYSWlmWDB3Q2dZSUtvWkl6ajBF
      QXdJRFJ3QXdSQUlnS0l6TXhUK1d0WlBlS1pOUApZS0E0aGdheFlBQ1g0ZFVvTGJJY0djZ1NGbFVD
      SUNtQjhmSWJQanVsTFNNSWdzY3VYdG5yUmhiYS9mMTRXZEtDCmdwUkl6SGhsCi0tLS0tRU5EIENF
      UlRJRklDQVRFLS0tLS0KIs8ILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURBakNDQXFt
      Z0F3SUJBZ0lVQnp4Q3pyUDhGdDF1K1plM3ZZUy9zdlF5RUdrd0NnWUlLb1pJemowRUF3SXcKWGpF
      TE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dURzl1
      Wkc5dQpNUkF3RGdZRFZRUUtEQWRQY21SbGNtVnlNUnN3R1FZRFZRUUREQkpqWVM1emRYQndiSGxq
      YUdGcGJpMXVaWFF3CkhoY05Nakl4TURBNE1EY3hPVEF3V2hjTk1qTXhNREE0TURjeU5EQXdXakJ4
      TVFzd0NRWURWUVFHRXdKSFFqRWIKTUJrR0ExVUVCeE1TTlRFdU5UQXZMVEF1TVRNdlRHOXVaRzl1
      TVJBd0RnWURWUVFLRXdkUGNtUmxjbVZ5TVJBdwpEZ1lEVlFRTEV3ZHZjbVJsY21WeU1TRXdId1lE
      VlFRREV4aHZjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1ClpYUXdXVEFUQmdjcWhrak9QUUlC
      QmdncWhrak9QUU1CQndOQ0FBUVk5Mk04QWh1YnV2M1V3eDRrcGVsUEtWRi8KYjFGbFV1VVJ0OUtw
      U0dDNnlhZGFqb3Jyd2ZHMG9aQ0UxU3BudGtRQy9hRUZibGVtb3VzeENUZE1ySVQ4bzRJQgpNREND
      QVN3d0RnWURWUjBQQVFIL0JBUURBZ09vTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JC
      Z0VGCkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1CMEdBMVVkRGdRV0JCVERjcnlJZGxEMlduSUJk
      eWV4S010azlSVHEKbGpBZkJnTlZIU01FR0RBV2dCU1E1amQ4QnlMSW1LTnFKREhuTFdiRVNDR0g1
      ekEvQmdOVkhSRUVPREEyZ2hodgpjbVJsY21WeU1TNXpkWEJ3YkhsamFHRnBiaTF1WlhTQ0dtOXla
      R1Z5WlhJeExtUmxkbVZzYjNBdWJHOWpZV3d1ClkyOXRNR3dHQ0NvREJBVUdCd2dCQkdCN0ltRjBk
      SEp6SWpwN0ltaG1Ma0ZtWm1sc2FXRjBhVzl1SWpvaUlpd2kKYUdZdVJXNXliMnhzYldWdWRFbEVJ
      am9pYjNKa1pYSmxjakV1YzNWd2NHeDVZMmhoYVc0dGJtVjBJaXdpYUdZdQpWSGx3WlNJNkltOXla
      R1Z5WlhJaWZYMHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdLSXpNeFQrV3RaUGVLWk5QCllLQTRo
      Z2F4WUFDWDRkVW9MYkljR2NnU0ZsVUNJQ21COGZJYlBqdWxMU01JZ3NjdVh0bnJSaGJhL2YxNFdk
      S0MKZ3BSSXpIaGwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoSEgoFNTAwbXMQChgBIAUogICA
      ChoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVycxoGQWRtaW5zIiIKBkFkbWlucxIY
      Eg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIioKD0Jsb2NrVmFsaWRhdGlvbhIXEg0IAxIJCgdXcml0
      ZXJzGgZBZG1pbnMiIgoHUmVhZGVycxIXEg0IAxIJCgdSZWFkZXJzGgZBZG1pbnMqBkFkbWlucxK9
      LwoLQ29uc29ydGl1bXMSrS8S4i4KFVN1cHBseUNoYWluQ29uc29ydGl1bRLILhKxFwoPbWFudWZh
      Y3R1cmVyTVNQEp0XGqUVCgNNU1ASnRUSkhUSjxUKD21hbnVmYWN0dXJlck1TUBKBBi0tLS0tQkVH
      SU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlDQ3pDQ0FiS2dBd0lCQWdJVUYrUUtIVTV0cWJQOEwwTWor
      Q2ZySTlqa3Fwb3dDZ1lJS29aSXpqMEVBd0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZC
      QWdNQmxwMWNtbGphREVQTUEwR0ExVUVCd3dHV25WeWFXTm8KTVJVd0V3WURWUVFLREF4TllXNTFa
      bUZqZEhWeVpYSXhIREFhQmdOVkJBTU1FMk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1WlhRd0hoY05N
      akl4TURBNE1EY3hNelF6V2hjTk1qVXdOekk0TURjeE16UXpXakJrTVFzd0NRWURWUVFHCkV3SkRT
      REVQTUEwR0ExVUVDQXdHV25WeWFXTm9NUTh3RFFZRFZRUUhEQVphZFhKcFkyZ3hGVEFUQmdOVkJB
      b00KREUxaGJuVm1ZV04wZFhKbGNqRWNNQm9HQTFVRUF3d1RZMkV1YldGdWRXWmhZM1IxY21WeUxX
      NWxkREJaTUJNRwpCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQk1pOW1UZGg2RERxZXArbVlE
      SG4zclNVYlB5cC90ZWg3alhOClNPVjRKRkx3T3ZUUFQwZWdDZERYaXRpbURveEZBNDJ6QnJMZHcv
      SlNPSlFnYlN1WlI4S2pRakJBTUE4R0ExVWQKRXdFQi93UUZNQU1CQWY4d0RnWURWUjBQQVFIL0JB
      UURBZ0dtTUIwR0ExVWREZ1FXQkJTVEZsUVFFSFFHd015bwp6RzJnT2VQSEl0N0xJakFLQmdncWhr
      ak9QUVFEQWdOSEFEQkVBaUJXMGFsQ3l2UlFTT1JBcWd0Y2F2cFpvVnd3CmJ6NFdTVEJrNGFhYitY
      NlpLZ0lnZEcyQXd4YjJuVks2UGhGZG5nME14U1ZtRW9HZE9GRllNeTl3OG9xRGRaRT0KLS0tLS1F
      TkQgQ0VSVElGSUNBVEUtLS0tLQoi4wgtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREVE
      Q0NBcmVnQXdJQkFnSVVKN2ZDZll0dGRYL3o1MG5xUHJvM1ptNGpJdFl3Q2dZSUtvWkl6ajBFQXdJ
      dwpaREVMTUFrR0ExVUVCaE1DUTBneER6QU5CZ05WQkFnTUJscDFjbWxqYURFUE1BMEdBMVVFQnd3
      R1duVnlhV05vCk1SVXdFd1lEVlFRS0RBeE5ZVzUxWm1GamRIVnlaWEl4SERBYUJnTlZCQU1NRTJO
      aExtMWhiblZtWVdOMGRYSmwKY2kxdVpYUXdIaGNOTWpJeE1EQTRNRGN5TVRBd1doY05Nak14TURB
      NE1EY3lOakF3V2pDQmhqRUxNQWtHQTFVRQpCaE1DUTBneEdqQVlCZ05WQkFjVEVUUTNMak00THpn
      dU5UUXZXblZ5YVdOb01SVXdFd1lEVlFRS0V3eE5ZVzUxClptRmpkSFZ5WlhJeEl6QU1CZ05WQkFz
      VEJXRmtiV2x1TUJNR0ExVUVDeE1NYldGdWRXWmhZM1IxY21WeU1SOHcKSFFZRFZRUUREQlpCWkcx
      cGJrQnRZVzUxWm1GamRIVnlaWEl0Ym1WME1Ga3dFd1lIS29aSXpqMENBUVlJS29aSQp6ajBEQVFj
      RFFnQUViMkJOa1RzaERSaExwVFZZMkY1SGpOZnB6ZS9yVjdNZGZQZDMvREVkNDZpZXJxYkg3OWhD
      CnZWY2c3NTM5OFNvLzJtY2FIaktnSHpPMHZVTTZrMklVUjZPQ0FTSXdnZ0VlTUE0R0ExVWREd0VC
      L3dRRUF3SUgKZ0RBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlFkeDhYcDZUMXdkYTNM
      TlR4SUsvZkY2VEI4eXpBZgpCZ05WSFNNRUdEQVdnQlNURmxRUUVIUUd3TXlvekcyZ09lUEhJdDdM
      SWpBa0JnTlZIUkVFSFRBYmdobGpZUzEwCmIyOXNjeTAzWTJRM1ptUm1PVGMyTFhadE9UZHJNSUdY
      QmdncUF3UUZCZ2NJQVFTQmluc2lZWFIwY25NaU9uc2kKWVdKaFl5NXBibWwwSWpvaWRISjFaU0lz
      SW1Ga2JXbHVJam9pZEhKMVpTSXNJbWhtTGtGbVptbHNhV0YwYVc5dQpJam9pYldGdWRXWmhZM1Ix
      Y21WeUlpd2lhR1l1Ulc1eWIyeHNiV1Z1ZEVsRUlqb2lRV1J0YVc1QWJXRnVkV1poClkzUjFjbVZ5
      TFc1bGRDSXNJbWhtTGxSNWNHVWlPaUpoWkcxcGJpSjlmVEFLQmdncWhrak9QUVFEQWdOSEFEQkUK
      QWlCTzdERDVvSE9NVVZXQUxyOEFJZkM0N1JlZ28zZDhpWTNSek45Ti9nblZ2d0lnSllrbktHcXdp
      aGJZVDFjeApNWkhNOGw3bVVSdGNFbTNsWDBkc2JCM2Y3aUU9Ci0tLS0tRU5EIENFUlRJRklDQVRF
      LS0tLS0KQg4KBFNIQTISBlNIQTI1NkqBBi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlD
      Q3pDQ0FiS2dBd0lCQWdJVUYrUUtIVTV0cWJQOEwwTWorQ2ZySTlqa3Fwb3dDZ1lJS29aSXpqMEVB
      d0l3ClpERUxNQWtHQTFVRUJoTUNRMGd4RHpBTkJnTlZCQWdNQmxwMWNtbGphREVQTUEwR0ExVUVC
      d3dHV25WeWFXTm8KTVJVd0V3WURWUVFLREF4TllXNTFabUZqZEhWeVpYSXhIREFhQmdOVkJBTU1F
      Mk5oTG0xaGJuVm1ZV04wZFhKbApjaTF1WlhRd0hoY05Nakl4TURBNE1EY3hNelF6V2hjTk1qVXdO
      ekk0TURjeE16UXpXakJrTVFzd0NRWURWUVFHCkV3SkRTREVQTUEwR0ExVUVDQXdHV25WeWFXTm9N
      UTh3RFFZRFZRUUhEQVphZFhKcFkyZ3hGVEFUQmdOVkJBb00KREUxaGJuVm1ZV04wZFhKbGNqRWNN
      Qm9HQTFVRUF3d1RZMkV1YldGdWRXWmhZM1IxY21WeUxXNWxkREJaTUJNRwpCeXFHU000OUFnRUdD
      Q3FHU000OUF3RUhBMElBQk1pOW1UZGg2RERxZXArbVlESG4zclNVYlB5cC90ZWg3alhOClNPVjRK
      Rkx3T3ZUUFQwZWdDZERYaXRpbURveEZBNDJ6QnJMZHcvSlNPSlFnYlN1WlI4S2pRakJBTUE4R0Ex
      VWQKRXdFQi93UUZNQU1CQWY4d0RnWURWUjBQQVFIL0JBUURBZ0dtTUIwR0ExVWREZ1FXQkJTVEZs
      UVFFSFFHd015bwp6RzJnT2VQSEl0N0xJakFLQmdncWhrak9QUVFEQWdOSEFEQkVBaUJXMGFsQ3l2
      UlFTT1JBcWd0Y2F2cFpvVnd3CmJ6NFdTVEJrNGFhYitYNlpLZ0lnZEcyQXd4YjJuVks2UGhGZG5n
      ME14U1ZtRW9HZE9GRllNeTl3OG9xRGRaRT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoaBkFk
      bWlucyI4CgdSZWFkZXJzEi0SIwgBEh8SCBIGCAESAggAGhMSEQoPbWFudWZhY3R1cmVyTVNQGgZB
      ZG1pbnMiOAoHV3JpdGVycxItEiMIARIfEggSBggBEgIIABoTEhEKD21hbnVmYWN0dXJlck1TUBoG
      QWRtaW5zIjkKBkFkbWlucxIvEiUIARIhEggSBggBEgIIABoVEhMKD21hbnVmYWN0dXJlck1TUBAB
      GgZBZG1pbnMiPAoLRW5kb3JzZW1lbnQSLRIjCAESHxIIEgYIARICCAAaExIRCg9tYW51ZmFjdHVy
      ZXJNU1AaBkFkbWlucyoGQWRtaW5zErYWCgpjYXJyaWVyTVNQEqcWGsMUCgNNU1ASuxQSsBQSrRQK
      CmNhcnJpZXJNU1AS6QUtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJQitEQ0NBWjZnQXdJ
      QkFnSVVSQWFBMmZXODV6WmRNNTNET295cnVYVGk4cUF3Q2dZSUtvWkl6ajBFQXdJdwpXakVMTUFr
      R0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpFUE1BMEdBMVVFQnd3R1RHOXVaRzl1
      Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFRRERBNWpZUzVqWVhKeWFXVnlMVzVs
      ZERBZUZ3MHkKTWpFd01EZ3dOekUxTkROYUZ3MHlOVEEzTWpnd056RTFORE5hTUZveEN6QUpCZ05W
      QkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpBTkJnTlZCQWNNQmt4dmJtUnZiakVR
      TUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3T1kyRXVZMkZ5Y21sbGNpMXVaWFF3
      V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFRbUFNMW9iWDJFVTRJd0lQcnVDOGoz
      SGJTZ1pyZFNUSHdaVHBpMzdtREI3VEovRlBaUUpXcXhGNXBzbHpjNgpYN29WYTRQdGx3UCtuaU9Y
      dXpjT2pZa0JvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUE0R0ExVWREd0VCCi93UUVBd0lC
      cGpBZEJnTlZIUTRFRmdRVUZ4THN1czRybDFlblA3TUptS3FiSk5JdnlwY3dDZ1lJS29aSXpqMEUK
      QXdJRFNBQXdSUUlnWGhaVUN6b0lQcUp3ekNzc05IY2d6Mk5QNEFWRlJ6bWp1cVZrMGYrSTN3OENJ
      UUNGSkJPagpidmVDSnJKUU5aSXd4WTRKb3VhTXNBK2J2WGFlT1pHOTdaVUduQT09Ci0tLS0tRU5E
      IENFUlRJRklDQVRFLS0tLS0KIrYILS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM3akND
      QXBTZ0F3SUJBZ0lVR1luRk83SVR0cnRrcW5iQVZFWGpGMVJUSklzd0NnWUlLb1pJemowRUF3SXcK
      V2pFTE1Ba0dBMVVFQmhNQ1IwSXhEekFOQmdOVkJBZ01Ca3h2Ym1SdmJqRVBNQTBHQTFVRUJ3d0dU
      Rzl1Wkc5dQpNUkF3RGdZRFZRUUtEQWREWVhKeWFXVnlNUmN3RlFZRFZRUUREQTVqWVM1allYSnlh
      V1Z5TFc1bGREQWVGdzB5Ck1qRXdNRGd3TnpJek1EQmFGdzB5TXpFd01EZ3dOekk0TURCYU1IZ3hD
      ekFKQmdOVkJBWVRBa2RDTVJzd0dRWUQKVlFRSEV4STFNUzQxTUM4dE1DNHhNeTlNYjI1a2IyNHhF
      REFPQmdOVkJBb1RCME5oY25KcFpYSXhIakFNQmdOVgpCQXNUQldGa2JXbHVNQTRHQTFVRUN4TUhZ
      MkZ5Y21sbGNqRWFNQmdHQTFVRUF3d1JRV1J0YVc1QVkyRnljbWxsCmNpMXVaWFF3V1RBVEJnY3Fo
      a2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkNBQVR0MGVNbStnR1lkSzJLam1xSVdLS2QKM0gxSy9XZHhS
      Vk1mTTYzSG1tSkx5L25JdWtQR2h5eVl2WFo0SHFUTmd1U0dsSkVQanFlck9zalYzMXlRUjVraQpv
      NElCR0RDQ0FSUXdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZS
      ME9CQllFCkZBRXVpWVpnVGJZczlaWkZOUlgwRGJYUFlBU3lNQjhHQTFVZEl3UVlNQmFBRkJjUzdM
      ck9LNWRYcHorekNaaXEKbXlUU0w4cVhNQ1FHQTFVZEVRUWRNQnVDR1dOaExYUnZiMnh6TFRaa05H
      TTJaamMyWkdZdGRtbzFOVFF3Z1kwRwpDQ29EQkFVR0J3Z0JCSUdBZXlKaGRIUnljeUk2ZXlKaFlt
      RmpMbWx1YVhRaU9pSjBjblZsSWl3aVlXUnRhVzRpCk9pSjBjblZsSWl3aWFHWXVRV1ptYVd4cFlY
      UnBiMjRpT2lKallYSnlhV1Z5SWl3aWFHWXVSVzV5YjJ4c2JXVnUKZEVsRUlqb2lRV1J0YVc1QVky
      RnljbWxsY2kxdVpYUWlMQ0pvWmk1VWVYQmxJam9pWVdSdGFXNGlmWDB3Q2dZSQpLb1pJemowRUF3
      SURTQUF3UlFJaEFNa1ozTHNiUEVtOUlWM1kyanRLeWJEYk1ZRGVEdlI2bURnSXNRNHIybUU5CkFp
      QmQ1RlVFVDRIWGlUTXB5Uk42YWRBWVZ0cmhtWHNZQ0ZoaFZqdU9NQVVnN0E9PQotLS0tLUVORCBD
      RVJUSUZJQ0FURS0tLS0tCkIOCgRTSEEyEgZTSEEyNTZK6QUtLS0tLUJFR0lOIENFUlRJRklDQVRF
      LS0tLS0KTUlJQitEQ0NBWjZnQXdJQkFnSVVSQWFBMmZXODV6WmRNNTNET295cnVYVGk4cUF3Q2dZ
      SUtvWkl6ajBFQXdJdwpXakVMTUFrR0ExVUVCaE1DUjBJeER6QU5CZ05WQkFnTUJreHZibVJ2YmpF
      UE1BMEdBMVVFQnd3R1RHOXVaRzl1Ck1SQXdEZ1lEVlFRS0RBZERZWEp5YVdWeU1SY3dGUVlEVlFR
      RERBNWpZUzVqWVhKeWFXVnlMVzVsZERBZUZ3MHkKTWpFd01EZ3dOekUxTkROYUZ3MHlOVEEzTWpn
      d056RTFORE5hTUZveEN6QUpCZ05WQkFZVEFrZENNUTh3RFFZRApWUVFJREFaTWIyNWtiMjR4RHpB
      TkJnTlZCQWNNQmt4dmJtUnZiakVRTUE0R0ExVUVDZ3dIUTJGeWNtbGxjakVYCk1CVUdBMVVFQXd3
      T1kyRXVZMkZ5Y21sbGNpMXVaWFF3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFR
      bUFNMW9iWDJFVTRJd0lQcnVDOGozSGJTZ1pyZFNUSHdaVHBpMzdtREI3VEovRlBaUUpXcXhGNXBz
      bHpjNgpYN29WYTRQdGx3UCtuaU9YdXpjT2pZa0JvMEl3UURBUEJnTlZIUk1CQWY4RUJUQURBUUgv
      TUE0R0ExVWREd0VCCi93UUVBd0lCcGpBZEJnTlZIUTRFRmdRVUZ4THN1czRybDFlblA3TUptS3Fi
      Sk5JdnlwY3dDZ1lJS29aSXpqMEUKQXdJRFNBQXdSUUlnWGhaVUN6b0lQcUp3ekNzc05IY2d6Mk5Q
      NEFWRlJ6bWp1cVZrMGYrSTN3OENJUUNGSkJPagpidmVDSnJKUU5aSXd4WTRKb3VhTXNBK2J2WGFl
      T1pHOTdaVUduQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KGgZBZG1pbnMiMwoHV3JpdGVy
      cxIoEh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyI0CgZBZG1pbnMSKhIg
      CAESHBIIEgYIARICCAAaEBIOCgpjYXJyaWVyTVNQEAEaBkFkbWlucyI3CgtFbmRvcnNlbWVudBIo
      Eh4IARIaEggSBggBEgIIABoOEgwKCmNhcnJpZXJNU1AaBkFkbWlucyIzCgdSZWFkZXJzEigSHggB
      EhoSCBIGCAESAggAGg4SDAoKY2Fycmllck1TUBoGQWRtaW5zKgZBZG1pbnMaQAoVQ2hhbm5lbENy
      ZWF0aW9uUG9saWN5EicSDAgDEggKBkFkbWlucxoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMqFy9D
      aGFubmVsL09yZGVyZXIvQWRtaW5zIi0KBkFkbWlucxIjEggIARIEEgISABoXL0NoYW5uZWwvT3Jk
      ZXJlci9BZG1pbnMqFy9DaGFubmVsL09yZGVyZXIvQWRtaW5zGiYKEEhhc2hpbmdBbGdvcml0aG0S
      EhIICgZTSEEyNTYaBkFkbWlucxotChlCbG9ja0RhdGFIYXNoaW5nU3RydWN0dXJlEhASBgj/////
      DxoGQWRtaW5zGk4KEE9yZGVyZXJBZGRyZXNzZXMSOhIfCh1vcmRlcmVyMS5zdXBwbHljaGFpbi1u
      ZXQ6NzA1MBoXL0NoYW5uZWwvT3JkZXJlci9BZG1pbnMaJgoMQ2FwYWJpbGl0aWVzEhYSDAoKCgZW
      MV80XzMSABoGQWRtaW5zIiIKBkFkbWlucxIYEg4IAxIKCgZBZG1pbnMQAhoGQWRtaW5zIiIKB1Jl
      YWRlcnMSFxINCAMSCQoHUmVhZGVycxoGQWRtaW5zIiIKB1dyaXRlcnMSFxINCAMSCQoHV3JpdGVy
      cxoGQWRtaW5zKgZBZG1pbnMaCgoACgAKAAoACgA=

    config:
      pod:
        resources:
          limits:
            memory: 512M
            cpu: 1
          requests:
            memory: 512M
            cpu: 0.5     
